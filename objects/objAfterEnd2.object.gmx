<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNothing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objFootstepKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Vars, buttons, BG

global.titleScreen = 1;

// Align BG
//scr_bgCentre();

x = round(global.width/2);
y = round(global.height/2);

// Create buttons
if !instance_exists(objAfterButtonHome) {
    instance_create(0,0,objAfterButtonHome);
    }
if !instance_exists(objAfterButtonTwitter) {
    instance_create(0,0,objAfterButtonTwitter);
    }
if !instance_exists(objAfterButtonBR) {
    instance_create(0,0,objAfterButtonBR);
    }


// Cue virtual keys
if os_type == os_ios {
    alarm[1] = 2;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Quit game
game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset save file, flush, cue quit
if instance_exists(objFadeOutNew) {
    with (objFadeOutNew) {
        noGo = 1;
        }
    }

if file_exists("home_save01.ini") {
    file_delete("home_save01.ini");
    }
draw_texture_flush();
audio_stop_all();
alarm[5] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restart game
game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset save file, flush, cue restart
if instance_exists(objFadeOutNew) {
    with (objFadeOutNew) {
        noGo = 1;
        }
    }

if file_exists("home_save01.ini") {
    file_delete("home_save01.ini");
    }
draw_texture_flush();
audio_stop_all();
alarm[3] = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create virtual keys (iOS)
global.mobRestart = virtual_key_add(0,global.height*0.73,global.width,global.height,global.xKey);
//global.mobQuit = virtual_key_add(global.width*0.54,global.height*0.73,global.width*0.48,global.height,ord("Q"));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Release left mb
global.mbleftPressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Button / taps
if (os_type == os_windows || os_type == os_macosx) {
    // Quit
    if keyboard_check_pressed(ord("Q")) || gamepad_button_check_pressed(global.whichPad,global.crButton) {
        if !instance_exists(objFadeOutNew) {
            instance_create(0,0,objFadeOutNew);
            }
        alarm[4] = 2;
        }
    // Restart
    if keyboard_check_pressed(global.xKey) || gamepad_button_check_pressed(global.whichPad,global.xButton) {
        if !instance_exists(objFadeOutNew) {
            instance_create(0,0,objFadeOutNew);
            }
        alarm[2] = 2;
        } 
    }
    
if (os_type == os_ios || os_type == os_android) {
    // Restart
    if keyboard_check_pressed(global.xKey) {
        if !instance_exists(objFadeOutNew) {
            instance_create(0,0,objFadeOutNew);
            }
        alarm[2] = 2;
        } 
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw everything

//draw_rectangle_colour(-16,-16,view_wview[global.deviceViewChange]+16,view_hview[global.deviceViewChange]+16,c_black,c_black,c_black,c_black,false);

/// Draw titles, prompts

// Smooth fonts
texture_set_interpolation(true);

//// Text
draw_set_halign(fa_center);
draw_set_valign(fa_top);

// Warning text
draw_set_font(global.fntTitles);
draw_text_ext_color((global.width/2),(global.height*0.16),global.gui_afterEnd2,global.lll,global.width*0.72,global.wh,global.wh,global.wh,global.wh,1);
        
//// Prompts
draw_set_halign(fa_center);

// Special for iOS
if os_type == os_ios {
    // "PLAY AGAIN"
    draw_set_font(global.fntPrompt);
    draw_text_color((global.width * 0.5)+2,(global.height * 0.83)+2,global.gui_afterRestartPC,global.kk,global.kk,global.kk,global.kk,1);
    draw_text_color((global.width * 0.5),(global.height * 0.83),global.gui_afterRestartPC,global.rd,global.rd,global.rd,global.rd,1);
    }

// Everything else
else {
    if global.forceInput &lt; 1 {
        // "PLAY AGAIN"
        draw_set_font(global.fntTitItal);
        draw_text_color((global.width * 0.3)+2,(global.height * 0.74)+2,global.gui_afterRestartPC,global.kk,global.kk,global.kk,global.kk,1);
        draw_text_color((global.width * 0.3),(global.height * 0.74),global.gui_afterRestartPC,global.g2,global.g2,global.g2,global.g2,1);
        // "QUIT"
        draw_text_color((global.width * 0.68)+2,(global.height * 0.74)+2,global.gui_afterPC,global.kk,global.kk,global.kk,global.kk,1);
        draw_text_color((global.width * 0.68),(global.height * 0.74),global.gui_afterPC,global.g2,global.g2,global.g2,global.g2,1);
        // SPACE
        draw_set_font(global.fntBig);
        draw_text_color((global.width * 0.3)+2,(global.height * 0.83)+2,global.gui_space,global.kk,global.kk,global.kk,global.kk,1);
        draw_text_color((global.width * 0.3),(global.height * 0.83),global.gui_space,global.rd,global.rd,global.rd,global.rd,1);
        // Q
        draw_text_color((global.width * 0.68)+2,(global.height * 0.83)+2,global.gui_q,global.kk,global.kk,global.kk,global.kk,1);
        draw_text_color((global.width * 0.68),(global.height * 0.83),global.gui_q,global.rd,global.rd,global.rd,global.rd,1);
        }
    if global.forceInput &gt;= 1 {
        // "PLAY AGAIN"
        draw_set_font(global.fntTitItal);
        draw_text_color((global.width * 0.3)+2,(global.height * 0.74)+2,global.gui_afterRestartPC,global.kk,global.kk,global.kk,global.kk,1);
        draw_text_color((global.width * 0.3),(global.height * 0.74),global.gui_afterRestartPC,global.g2,global.g2,global.g2,global.g2,1);
        // "QUIT"
        draw_text_color((global.width * 0.68)+2,(global.height * 0.74)+2,global.gui_afterPC,global.kk,global.kk,global.kk,global.kk,1);
        draw_text_color((global.width * 0.68),(global.height * 0.74),global.gui_afterPC,global.g2,global.g2,global.g2,global.g2,1);
        // A / X
        draw_sprite_ext(global.xSpr[global.ui],0,global.width*0.28,global.height*0.86,4,4,0,c_white,1);
        // B / Circle
        draw_sprite_ext(global.crSpr[global.ui],0,global.width*0.67,global.height*0.86,4,4,0,c_white,1);
        }
    }
    
// Smooth fonts
texture_set_interpolation(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
