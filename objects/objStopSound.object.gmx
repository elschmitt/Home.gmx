<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSoundStop</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BGMtoStop = sndNothing;
killSound = sndNothing;
killSound2 = sndNothing;
killSound3 = sndNothing;
killSound4 = sndNothing;
killSound5 = sndNothing;
killSound6 = sndNothing;

killEnd = sndNothing;
killEnd2 = sndNothing;
killEnd3 = sndNothing;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Redundant check
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kill sounds

if killSound != sndNothing {
    audio_stop_sound(killSound);
    }
if killSound2 != sndNothing {
    audio_stop_sound(killSound2);
    }
if killSound3 != sndNothing {
    audio_stop_sound(killSound3);
    }
if killSound4 != sndNothing {
    audio_stop_sound(killSound4);
    }
if killSound5 != sndNothing {
    audio_stop_sound(killSound5);
    }
if killSound6 != sndNothing {
    audio_stop_sound(killSound6);
    }
if BGMtoStop != sndNothing {
    audio_stop_sound(BGMtoStop);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kill some sounds at room end; redundant kill
if killEnd != sndNothing {
    sound_stop(killEnd);
    }
if killEnd2 != sndNothing {
    sound_stop(killEnd2);
    }
if killEnd3 != sndNothing {
    sound_stop(killEnd3);
    }
    
/// Check and kill, just in case
if killSound != sndNothing {
    if audio_is_playing(killSound) {
        audio_stop_sound(killSound);
        }
    }
if killSound2 != sndNothing {
    if audio_is_playing(killSound2) {
        audio_stop_sound(killSound2);
        }
    }
if killSound3 != sndNothing {
    if audio_is_playing(killSound3) {
        audio_stop_sound(killSound3);
        }
    }
if killSound4 != sndNothing {
    if audio_is_playing(killSound4) {
        audio_stop_sound(killSound4);
        }
    }
if killSound5 != sndNothing {
    if audio_is_playing(killSound5) {
        audio_stop_sound(killSound5);
        }
    }
if killSound6 != sndNothing {
    if audio_is_playing(killSound6) {
        audio_stop_sound(killSound6);
        }
    }
if BGMtoStop != sndNothing {
    if audio_is_playing(BGMtoStop) {
        audio_stop_sound(BGMtoStop);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cue kill sound
alarm[0] = 3;
// Cue redundant check
alarm[1] = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
