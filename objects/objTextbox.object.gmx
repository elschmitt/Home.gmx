<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* NOTE:
Make sure the box is NOT visible and IS persistent
Put ONE text box in the first room 
*/

image_speed=0.05; //Set the image to not flash too fast
//Create a queue to contain all the texts
globalvar text;
text=ds_queue_create();
drawstr="";

//Set the string position to make the text scroll nicely
pos=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This keeps the textbox to be always at the bottom of the view if they are being used
//Putting it in the End Step stops it from lagging behind the views
x = view_xview[0];
y = view_yview[0]+view_hview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!ds_queue_empty(text)) { //Check to see if there is anything in the queue
    drawstr=ds_queue_head(text); //Set the string to be drawn to the text in the queue
} else { //If the queue has no text
    drawstr=""; //Set the string to empty
}
if(drawstr != "") {
    visible = 1; //If there is text, make the box visible
} else {
    visible = 0; //Otherwise don't show the box
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(drawstr != "") {
    //Draw the text, scrolling across the box
    draw_set_font(dialogueFont); //Set the font, -1 is default. Put the index of one of your own fonts to use it instead
    draw_set_color(c_black); //Set the colour to black. Change the colour to whatever you like best
    draw_self(); //Draw the box behind the text
    cstr = string_copy(drawstr,1,pos); //Take only the portion of the text up to the current position
    draw_text_ext_transformed(x+16,y+16,cstr,-1,-1,1,1,0); //Draw the shortened string
    pos += 1.5; //Move the position to farther. Change this to make the text move at a different speed
}

//Play a sound if there is a string to be written and it is not all visible
if(drawstr!="" &amp;&amp; pos &lt; string_length(drawstr)) {
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!ds_queue_empty(text)) {
    if(pos &gt;= string_length(drawstr)) { //If the position is past the end of the drawstr
        audio_play_sound(sndNextMessage,9,0); //Play the sound for the next message. Change the sound index to your own
        ds_queue_dequeue(text);     //Remove the read string from the queue
        pos = 0;                    //Reset the position to 0
    } else {
        //Skip to the end if the string is not fully written
        pos = string_length(drawstr);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
