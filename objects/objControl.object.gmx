<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCTRL</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-99999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// UPDATE LOG
/// 2014-05-20: trying to find why Friday's build reverted.

// Current version
switch os_type {
    case os_windows: global.curVer = "1.6.2"; break;
    case os_macosx: global.curVer = "1.6.2"; break;
    case os_ios: global.curVer = "1.6.1"; break;
    case os_android: global.curVer = "1.5.0";
    case os_ps4: global.curVer = "1.0.2"; break;
    case os_psvita: global.curVer = "1.0.2"; break;
    }

global.tempInputCheck = 0;
listenerCheck = 0;

// Show if Debug is on
if global.debugMode == 1 {
    visible = true;
    }
if global.debugMode == 0 {
    if global.testMode == 1 {
        visible = true;
        }
    else {
        visible = false;
        }
    }

// PS4 Temp debug mode
if (os_type == os_ps4 || os_type == os_psvita || os_type == os_windows || os_type == os_macosx) {
    global.debugMode = 0;
    debugRoom = 1;
    //visible = false;
    }  

// Language select
gamescript_eng();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Window Resize

scr_winMode();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Allow pausing again (to be safe)
global.pauseTimeout = 0;
// Kill objQuitter just in case
/*if instance_exists(objQuitter) {
    with (objQuitter) {
        instance_destroy();
        }
    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset numclick, doubleclick
global.numClick = 0;
global.doubleClick = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset right stick
global.stickRightPressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset down stick
global.stickDownPressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset Face1 button
if global.face1pressed == 2 {
    global.face1pressed = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset Face1 button
global.face1pressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset dialogOn
global.dialogOn = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset textboxOn, more
global.textBoxOn = 0;
global.stickDownPressed = 0;
global.boxReset = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn off debugMode
global.debugMode = 0;
self.visible = false;
audio_play_sound(sndDoorLocked1,10,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Turn on debugMode
global.debugMode = 1;
self.visible = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if Dialogue Box has just quit
if global.textBoxOn == 3 &amp;&amp; global.boxReset == 0 {
    global.boxReset = 1;
    alarm[3] = 15;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Confirm Factory Power Switch Activation / Input check
if instance_exists((inst_F5540572)) {
    if ((inst_F5540572).image_index == 8) {
    global.factorySwitch1 = 1;
    }
}
if instance_exists((inst_144A380E)) {
    if ((inst_144A380E).image_index == 6) {
    global.factorySwitch2 = 1;
    }
}
if instance_exists((inst_97034121)) {
    if ((inst_97034121).image_index == 7) {
    global.factorySwitch3 = 1;
    }
}
if instance_exists((inst_4A58EF85)) {
    if ((inst_4A58EF85).image_index == 7) {
    global.factorySwitch4 = 1;
    }
}
if instance_exists((inst_A47DFF43)) {
    if ((inst_A47DFF43).image_index == 8) {
    global.factorySwitch5 = 1;
    }
}

/// Input check
if os_type == os_windows || os_type == os_macosx {
    if window_has_focus() {
        if !os_is_paused() {
            scr_inputCheck();
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Dialogue joystick check, lots more
// Force Yes/No sprites
if global.forceInput &lt; 1 {
    global.diag_yesno = spr_diag_yesno;
    global.diag_yesno_x = 310;
    global.diag_yesno_y = 220;
    }
if global.forceInput &gt;= 1 {
    global.diag_yesno = spr_diag_yesnoX;
    global.diag_yesno_x = 305;
    global.diag_yesno_y = 220;
    // Reset main action button
    if !instance_exists(obj_dialog) {
        if gamepad_button_check_pressed(global.whichPad,global.xButton) &amp;&amp; global.face1pressed == 0 {
            global.face1pressed = 1;
            }
        if gamepad_button_check_released(global.whichPad,global.xButton) &amp;&amp; global.face1pressed == 1 {
            alarm[5] = 10;
            }
    }
    if gamepad_button_check_released(global.whichPad,global.xButton) &amp;&amp; global.face1pressed == 2 {
        alarm[5] = 10;
        }
    // Stick releases
    if !instance_exists(obj_dialog) {
        if gamepad_axis_value(global.whichPad,gp_axislv) &lt; 0.5 &amp;&amp; global.stickDownPressed == 1 {
            alarm[7] = 15;
            }
        if gamepad_axis_value(global.whichPad,gp_axislh) &lt; 0.5 &amp;&amp; global.stickRightPressed == 1 {
            alarm[8] = 15;
            }
        }
    }
    
if os_type == os_windows || os_type == os_macosx || os_type == os_ios {
    scr_doubleClick();
    }
  
if global.dialogOn == 2 {
    alarm[4] = 15;
    global.dialogOn = 3;
    }



// Auto-deactivate debug mode if using safe
if (room == enterCode || room == enterCodePC || room == enterCodeCE) &amp;&amp; global.debugMode == 1 {
    alarm[1] = 1;
    }    
    
// Conditional Trigger Checks
if instance_exists(objClippings) &amp;&amp; instance_exists(objMap) {
    if objClippings.image_index == 3 &amp;&amp; objMap.image_index == 3 {
        if instance_exists((inst_11C2321B)) {
            with ((inst_11C2321B)) {
            instance_destroy();
            }
        }
    }
}

// If all Power Switches are active, activate the powerbox
if (global.factorySwitch1 == 1) &amp;&amp; (global.factorySwitch2 == 1) &amp;&amp; (global.factorySwitch3 == 1) &amp;&amp; (global.factorySwitch4 == 1) &amp;&amp; (global.factorySwitch5 == 1) {
    global.factoryPowerbox = 1;
    }
    
// Un-limp player one level after 100 steps
if global.walkItOff == 0 {
    if global.playerLimp == 2 {
        global.playerLimp -= 1;
        //global.walkItOff = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Track gamepads

show_debug_message("Event = " + async_load[? "event_type"]);        // Debug cocde so you can see which event has been
show_debug_message("Pad = " + string(async_load[? "pad_index"]));   // triggered and the pad associated with it.

switch(async_load[? "event_type"])             // Parse the async_load map to see which event has been triggered
{
case "gamepad discovered":                     // A game pad has been discovered
    var pad = async_load[? "pad_index"];       // Get the pad index value from the async_load map
    global.gpOn += 1;
    break;
case "gamepad lost":                           // Gamepad has been removed or otherwise disabled
    var pad = async_load[? "pad_index"];       // Get the pad index
    if global.gpOn &gt; 0 {
        global.gpOn -= 1;
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Track items, misc. stuff

// Resize flashlight sprites
with (objFlashlight) {
    if image_xscale != 4 {
        image_xscale = 4;
        image_yscale = image_xscale;
        }
    }

// Allow pausing after loading
if room == loadRoom {
    global.pauseReady = 1;
    }
    
// Add limp countdown
if room == FallDown2 {
    if global.playerLimp == 2 {
        global.walkItOff = 1300;
        }
    }

// Interactive Object Settings
// House Settings
if instance_exists(objHouseBody) {
    if (objHouseBody.image_index == 3) {
    global.houseBody = 1;
    }
}
if instance_exists(objTools1) {
    if (objTools1.image_index == 3) {
    global.houseTools = 1;
    }
}
if instance_exists(objBlood1) {
    if (objBlood1.image_index == 3) {
    global.houseBlood = 1;
    }
}
if instance_exists(objHouseDesk) {
    if (objHouseDesk.sprite_index == sprHouseDeskOn) {
    global.houseDesk = 1;
    }
}
if instance_exists(objShelf3) {
    if (objShelf3.image_index == 3) {
    global.houseShelf = 1;
    }
}
if instance_exists(objTable2) {
    if (objTable2.image_index == 3) {
    global.houseTable = 1;
    }
}
if instance_exists(objTools1) {
    if (objTools1.image_index == 3) {
    global.houseTools = 1;
    }
}
if instance_exists(objCat) {
    if (objCat.sprite_index == sprNothing) {
    global.houseCat = 1;
    }
}
if instance_exists(objHouseMouse) {
    if (objHouseMouse.sprite_index == sprNothing) {
    global.houseMouse = 1;
    }
}
if instance_exists(objHouseMouse) {
    if (objHouseMouse.sprite_index == sprMouseNo) {
    global.houseMouse = 3;
    }
}
if instance_exists(objBoxPush) {
    if (objBoxPush.image_index == 3) {
    global.pushBox = 1;
    }
}
if instance_exists(objPictureSwitch) {
    if (objPictureSwitch.image_index == 3) {
    global.pictureSwitch = 1;
    }
}
if instance_exists(objOldPhoto) {
    if (objOldPhoto.image_index == 3) {
    global.housePhoto = 1;
    }
}
if instance_exists(objHouseMirror) {
    if (objHouseMirror.image_index == 3) {
    global.houseMirror = 1;
    }
}
if instance_exists(objBlockedDoor1) {
    if ((objBlockedDoor1.image_index == 3) || (objBlockedDoor1.image_index == 2)) {
    global.blockedDoor1 = 1;
    }
}
if instance_exists(objPhotoStuff) {
    if (objPhotoStuff.image_index == 3) {
    global.housePhotostuff = 1;
    }
}
if instance_exists(objTableChairsHouse) {
    if (objTableChairsHouse.image_index == 3) {
    global.houseKitchentable = 1;
    }
}
if instance_exists((objMouseKitchen)) {
    if ((objMouseKitchen).sprite_index == sprNothing) {
    global.mouseKitchen = 1;
    }
}
if instance_exists((inst_318C9500)) {
    if ((inst_318C9500).image_index == 3) {
    global.houseTrigger1 = 1;
    }
}
if instance_exists((inst_D778F20B)) {
    if ((inst_D778F20B).image_index == 3) {
    global.houseTrigger2 = 1;
    }
}
if instance_exists((inst_7D49A013)) {
    if ((inst_7D49A013).image_index == 3) {
    global.houseTrigger3 = 1;
    }
}
if instance_exists((inst_88A8DBF0)) {
    if ((inst_88A8DBF0).image_index == 3) {
    global.houseTrigger8 = 1;
    }
}

if instance_exists((inst_EE3E9EFA)) {
    if ((inst_EE3E9EFA).image_index == 3) {
    global.houseTriggerSound1 = 1;
    }
}
if instance_exists((inst_77D1FC29)) {
    if ((inst_77D1FC29).image_index == 3) {
    global.houseTriggerSound2 = 1;
    }
}

// Tunnel Settings
if instance_exists(objRope1) {
    if (objRope1.image_index == 3) {
    global.tunnelRope = 1;
    }
}
if instance_exists(objTableGun) {
    if (objTableGun.image_index == 3) {
    global.tunnelGun = 1;
    }
}
if instance_exists(objClippings) {
    if (objClippings.image_index == 3) {
    global.clippings1 = 1;
    }
}
if instance_exists(objDesk3) {
    if (objDesk3.image_index == 3) {
    global.desk3 = 1;
    }
}
if instance_exists(objMap) {
    if (objMap.image_index == 3) {
    global.map1 = 1;
    }
}
if instance_exists(objRemains1) {
    if (objRemains1.image_index == 3) {
    global.remains1 = 1;
    }
}
if instance_exists(objCage) {
    if (objCage.image_index == 3) {
    global.cage1 = 1;
    }
}
if instance_exists(objHooks1) {
    if (objHooks1.image_index == 3) {
    global.hooks1 = 1;
    }
}
if instance_exists(objBoxes1) {
    if (objBoxes1.image_index == 3) {
    global.boxes1 = 1;
    }
}
if instance_exists(objShelves) {
    if (objShelves.image_index == 3) {
    global.shelves2 = 1;
    }
}
if instance_exists(objNote) {
    if (objNote.image_index == 3) {
    global.note1 = 1;
    }
}
if instance_exists(objRack) {
    if (objRack.image_index == 3) {
    global.tunnelRack = 1;
    }
}
if instance_exists(objFootprints) {
    if (objFootprints.image_index == 3) {
    global.tunnelFootprints = 1;
    }
}
if instance_exists((inst_7A80014F)) {
    if ((inst_7A80014F).image_index == 3) {
    global.tunnelTrigger2 = 1;
    }
}
if instance_exists((inst_A9308477)) {
    if ((inst_A9308477).image_index == 3) {
    global.tunnelTrigger3 = 1;
    }
}
if instance_exists((inst_7E8116E2)) {
    if ((inst_7E8116E2).image_index == 3) {
    global.tunnelTrigger4 = 1;
    }
}
if instance_exists((inst_DFEF9EAE)) {
    if ((inst_DFEF9EAE).image_index == 3) {
    global.tunnelTrigger5 = 1;
    }
}
if instance_exists((inst_11C2321B)) {
    if ((inst_11C2321B).image_index == 3) {
    global.tunnelTrigger6 = 1;
    }
}
if instance_exists((inst_9509B9F2)) {
    if ((inst_9509B9F2).image_index == 3) {
    global.tunnelTriggerSound2 = 1;
    }
}
if instance_exists((objBats)) {
    if ((objBats).sprite_index == sprNothing) {
    global.tunnelBats = 1;
    }
}

// Sewers Settings
if instance_exists(objGarbageBags) {
    if (objGarbageBags.image_index == 3) {
    global.trashTape = 1;
    }
}
if instance_exists(objDeskTV) {
    if (objDeskTV.image_index == 3) || (objDeskTV.sprite_index == sprDeskTVon) {
    global.tapePlayed = 1;
    }
}
if instance_exists(objShelfTapes) {
    if (objShelfTapes.image_index == 3) {
    global.shelfTapes = 1;
    }
}
if instance_exists(objKnife) {
    if (objKnife.image_index == 3) {
    global.bloodyKnife = 1;
    }
}
if instance_exists(objSewerWorker) {
    if (objSewerWorker.image_index == 3) {
    global.sewerKey = 1;
    }
}
if instance_exists(objSewerGrate) {
    if (objSewerGrate.sprite_index == sprSewerGrateOn || objSewerGrate.sprite_index == sprSewerGrateh2) {
    global.sewerGrate = 1;
    global.trainKey = 1;
    }
}
if instance_exists(objMachine1) {
    if (objMachine1.image_index == 3) {
    global.machine1 = 1;
    }
}
if instance_exists(objKillerPaper) {
    if (objKillerPaper.image_index == 3) {
    global.sewerKiller = 1;
    }
}
if instance_exists(objSewersReceipt) {
    if (objSewersReceipt.image_index == 3) {
    global.sewerReceipt = 1;
    }
}
if instance_exists(objSewersBottles) {
    if (objSewersBottles.image_index == 3) {
    global.sewerBottles = 1;
    }
}
if instance_exists(objSafetyPoster) {
    if (objSafetyPoster.image_index == 3) {
    global.safetyPoster = 1;
    }
}
if instance_exists(objSecurityCamera) {
    if (objSecurityCamera.image_index == 3) {
    global.securityCamera = 1;
    }
}
if instance_exists(objSewerSteam) {
    if (objSewerSteam.sprite_index == sprNothing) {
    global.sewerSteam = 1;
    }
}
if instance_exists(objDirtPile) {
    if (objDirtPile.image_index == 3) {
    global.sewerDirt = 1;
    }
}
if instance_exists((inst_913D19C8)) {
    if ((inst_913D19C8).image_index == 3) {
    global.sewerVent1 = 1;
    }
}
if instance_exists((inst_E1B0A34E)) {
    if ((inst_E1B0A34E).image_index == 3) {
    global.sewerVent2 = 1;
    }
}
if instance_exists((inst_902F4BED)) {
    if ((inst_902F4BED).image_index == 3) {
    global.sewerTriggerSound1 = 1;
    }
}
if instance_exists((inst_B2036B08)) {
    if ((inst_B2036B08).image_index == 1) {
    global.valve1 = 1;
    }
}
if instance_exists((inst_8282A86D)) {
    if ((inst_8282A86D).image_index == 2) {
    global.valve2 = 1;
    }
}
if instance_exists((inst_59A9F82A)) {
    if ((inst_59A9F82A).image_index == 3) {
    global.valve3 = 1;
    }
}
if instance_exists((inst_F8EB1B35)) {
    if ((inst_F8EB1B35).image_index == 1) {
    global.valve4 = 1;
    }
}
if instance_exists((inst_7E055B47)) {
    if ((inst_7E055B47).image_index == 3) {
    global.sewersTrigger1 = 1;
    }
}
if instance_exists((inst_C1B85782)) {
    if ((inst_C1B85782).image_index == 3) {
    global.sewersTrigger4 = 1;
    }
}
if instance_exists((inst_F1622CB6)) {
    if ((inst_F1622CB6).image_index == 3) {
    global.sewersTrigger5 = 1;
    }
}

// Water Tower Settings
if instance_exists(objLadderGrate) {
    if (objLadderGrate.image_index == 3) {
    global.wtEntrance = 1;
    }
}
if instance_exists(objLadderWT) {
    if (objLadderWT.image_index == 3) || (objLadderWT.image_index == 2) {
    global.wtLadder = 1;
    }
}

if instance_exists(objWallet) {
    if (objWallet.image_index == 3) {
    global.wtWallet = 1;
    }
}
if instance_exists(objRailing) {
    if (objRailing.image_index == 3) {
    global.wtRailing = 1;
    }
}

// Trainyard Settings
if instance_exists((inst_F888EE56)) {
    if ((inst_F888EE56).image_index == 3) {
    global.trainTrigger1 = 1;
    }
}
if instance_exists((inst_11E5868E)) {
    if ((inst_11E5868E).image_index == 3) {
    global.trainTrigger2 = 1;
    }
}
if instance_exists(objTrainMap) {
    if (objTrainMap.image_index == 3) {
    global.trainMap1 = 1;
    }
}
if instance_exists(objTrainFront) {
    if (objTrainFront.image_index == 3) {
    global.trainTrain = 1;
    }
}
if instance_exists(objBoothWindow) {
    if (objBoothWindow.image_index == 3) {
    global.trainBoothWindow = 1;
    }
}

// Forest Settings
if instance_exists(objSink1) {
    if (objSink1.image_index == 3) {
    global.forestSink = 1;
    }
}
if instance_exists(objForestPlank) {
    if (objForestPlank.image_index == 3) {
    global.forestPlank = 1;
    }
}
if instance_exists(objForestChairs) {
    if (objForestChairs.image_index == 3) {
    global.forestChairs = 1;
    }
}
if instance_exists(objForestFirepit) {
    if (objForestFirepit.image_index == 3) {
    global.forestFirepit = 1;
    }
}
if instance_exists(objForestTent) {
    if (objForestTent.image_index == 3) {
    global.forestTent = 1;
    }
}
if instance_exists(objForestNotes) {
    if (objForestNotes.image_index == 3) {
    global.forestNotes = 1;
    }
}
if instance_exists(objForestTable) {
    if ((objForestTable.image_index == 3) &amp;&amp; (global.bloodyKnife == 0)) {
        global.forestTableNo = 1;
        }
    if ((objForestTable.image_index == 3) &amp;&amp; (global.bloodyKnife == 1)) {
        global.forestTable = 1;
    }
}
if instance_exists(objForestGrave) {
    if (objForestGrave.image_index == 3) {
    global.forestGrave = 1;
    }
}
/*if instance_exists((105135)) {
    if ((105135).image_index == 3) {
    global.forestTrigger1 = 1;
    }
}*/
if instance_exists((inst_47C0F8BD)) {
    if ((inst_47C0F8BD).image_index == 3) {
    global.forestTrigger2 = 1;
    }
}
if instance_exists((inst_ED607D10)) {
    if ((inst_ED607D10).image_index == 3) {
    global.forestTrigger3 = 1;
    }
}
if instance_exists((inst_C1D1698F)) {
    if ((inst_C1D1698F).image_index == 3) {
    global.forestTrigger4 = 1;
    }
}
if instance_exists((inst_86BF727B)) {
    if ((inst_86BF727B).image_index == 3) {
    global.forestTriggerSound1 = 1;
    }
}
/*if instance_exists((105433)) {
    if ((105433).image_index == 3) {
    global.forestTriggerSound2 = 1;
    }
}*/
if instance_exists((inst_CE445994)) {
    if ((inst_CE445994).image_index == 3) {
    global.forestTriggerSound4 = 1;
    }
}
if instance_exists(objCampSign1) {
    if (objCampSign1.image_index == 3) {
    global.forestCampSign1 = 1;
    }
}
if instance_exists(objCampSign2) {
    if (objCampSign2.image_index == 3) {
    global.forestCampSign2 = 1;
    }
}
if instance_exists(objCreditCard) {
    if (objCreditCard.image_index == 3) {
    global.forestCard = 1;
    }
}


// Factory Settings
if instance_exists(objDeadGuard) {
    if (objDeadGuard.image_index == 3) {
    global.factoryGuard = 1;
    }
}
if instance_exists(objBuriedWatch) {
    if (objBuriedWatch.image_index == 3) {
    global.factoryWatch = 1;
    }
}
if instance_exists(objBottles) {
    if (objBottles.image_index == 3) {
    global.factoryBottles = 1;
    }
}
if instance_exists(objShelfMetal2) {
    if (objShelfMetal2.image_index == 3) {
    global.factoryHammer = 1;
    }
}
if instance_exists(objBulletin) {
    if (objBulletin.image_index == 3) {
    global.factoryBulletin = 1;
    }
}
if instance_exists(objBreakTable) {
    if (objBreakTable.image_index == 3) {
    global.factoryBreakTable = 1;
    }
}
if instance_exists(objTorchRack) {
    if (objTorchRack.image_index == 3) {
    global.factoryTorchRack = 1;
    }
}
if instance_exists((inst_F5540572)) {
    if ((inst_F5540572).image_index == 8) {
    global.factorySwitch1 = 1;
    }
}
if instance_exists((inst_144A380E)) {
    if ((inst_144A380E).image_index == 6) {
    global.factorySwitch2 = 1;
    }
}
if instance_exists((inst_97034121)) {
    if ((inst_97034121).image_index == 7) {
    global.factorySwitch3 = 1;
    }
}
if instance_exists((inst_4A58EF85)) {
    if ((inst_4A58EF85).image_index == 7) {
    global.factorySwitch4 = 1;
    }
}
if instance_exists((inst_A47DFF43)) {
    if ((inst_A47DFF43).image_index == 8) {
    global.factorySwitch5 = 1;
    }
}
if instance_exists(objLockerOpen2) {
    if (objLockerOpen2.image_index == 3) {
    global.factoryCardKey = 1;
    }
}
if instance_exists(objHatchBottom) {
    if (objHatchBottom.image_index == 3) {
    global.factoryHatchBottom = 1;
    }
}
if instance_exists(objLockerOpen) {
    if (objLockerOpen.image_index == 3) {
    global.factoryLocker2 = 1;
    }
}
if instance_exists(objLockerOpen3) {
    if (objLockerOpen3.image_index == 3) {
    global.factoryLocker3 = 1;
    }
}
if instance_exists(objLockerOpen4) {
    if (objLockerOpen4.image_index == 3) {
    global.factoryLocker4 = 1;
    }
}
if instance_exists(objLockerOpen5) {
    if (objLockerOpen5.image_index == 3) {
    global.factoryLocker5 = 1;
    }
}
if instance_exists((inst_E952F6B8)) {
    if ((inst_E952F6B8).image_index == 3) {
    global.factoryTrigger1 = 1;
    }
}
if instance_exists((inst_B481EC4C)) {
    if ((inst_B481EC4C).image_index == 3) {
    global.factoryTrigger2 = 1;
    }
}
if instance_exists((inst_02DA2862)) {
    if ((inst_02DA2862).image_index == 3) {
    global.factoryTrigger3 = 1;
    }
}
if instance_exists((inst_E765851B)) {
    if ((inst_E765851B).image_index == 3) {
    global.factoryTriggerSound1 = 1;
    }
}

// Store Settings
if instance_exists(objStoreAttic) {
    if (objStoreAttic.image_index == 3) || (objStoreAttic.image_index == 2) {
    global.storeAttic = 1;
    }
}
if instance_exists(objStoreTV) {
    if (objStoreTV.sprite_index == sprStoreTVon) {
    global.storeTV = 1;
    }
}
if instance_exists(objTrashCan1) {
    if (objTrashCan1.image_index == 3) {
    global.storeKey = 1;
    }
}
if instance_exists(objStoreOwner) {
    if (objStoreOwner.image_index == 3) {
        global.storeOwner = 1;
    }
    if (objStoreOwner.image_index == 5) {
        global.storeOwner = 2;
    }
}
if instance_exists(objStoreDumpster) {
    if (objStoreDumpster.image_index == 3) {
    global.storeLicense = 1;
    }
}
if instance_exists(objTableChairs1) {
    if (objTableChairs1.image_index == 3) {
    global.storeTable = 1;
    }
}
if instance_exists(objWifesthings) {
    if (objWifesthings.image_index == 3) {
    global.storeWifesThings = 1;
    }
}
if instance_exists(objWifesCoat) {
    if (objWifesCoat.image_index == 3) {
    global.storeWifesCoat = 1;
    }
}
if instance_exists(objGunCabinet) {
    if (objGunCabinet.image_index == 3) {
    global.storeGunrack = 1;
    }
}
if instance_exists(objGunCabinet) {
    if (objGunCabinet.image_index == 5) {
    global.storeGunrack = 1;
    global.tunnelGun = 3;
    }
}
if instance_exists((inst_FB12DABC)) {
    if ((inst_FB12DABC).image_index == 3) {
    global.storeTrigger1 = 1;
    }
}
if instance_exists((inst_01362EF3)) {
    if ((inst_01362EF3).image_index == 3) {
    global.storeTrigger2 = 1;
    }
}
if instance_exists((inst_36C71718)) {
    if ((inst_36C71718).image_index == 3) {
    global.storeTriggerSound1 = 1;
    }
}
if instance_exists((inst_482E248F)) {
    if ((inst_482E248F).image_index == 3) {
    global.storeTriggerSound2 = 1;
    }
}
if instance_exists((inst_2A353C75)) {
    if ((inst_2A353C75).image_index == 3) {
    global.storeTrigger3 = 1;
    }
}

// Road Settings
if instance_exists(objTruck) {
    if (objTruck.image_index == 3) {
    global.roadTruck = 1;
    }
}

// Home Settings
if instance_exists(objPostbox) {
    if (objPostbox.image_index == 3) {
    global.homeLetter = 1;
    }
}
if instance_exists(objCrowbar) {
    if (objCrowbar.image_index == 3) {
    global.homeCrowbar = 1;
    }
}
if instance_exists(objWifesSuitcase) {
    if (objWifesSuitcase.image_index == 3) {
    global.homeSuitcase = 1;
    }
}
if instance_exists(objHomeGarbage) {
    if (objHomeGarbage.image_index == 3) {
    global.homeGarbage = 1;
    global.homeKey2F = 1;
    }
}
if instance_exists(objHomeBoxes1) {
    if (objHomeBoxes1.image_index == 3) {
    global.homeBoxes1 = 1;
    }
}
if instance_exists(objHomeBoxes2) {
    if (objHomeBoxes2.image_index == 3) {
    global.homeBoxes2 = 1;
    }
}
if instance_exists(objDeskHome) {
    if (objDeskHome.image_index == 3) {
    global.homeKey = 1;
    }
}
if instance_exists(objHomeKitchenTable) {
    if (objHomeKitchenTable.image_index == 3) {
    global.homeKitchenTable = 1;
    }
}
if instance_exists(objTVHome) {
    if (objTVHome.image_index == 3) {
    global.homeTV = 1;
    }
}
if instance_exists(objHomeMail) {
    if (objHomeMail.image_index == 3) {
    global.homeMail = 1;
    }
}
if instance_exists(objBookshelvesHome) {
    if (objBookshelvesHome.image_index == 3) {
    global.homeShelves = 1;
    }
}
if instance_exists(objMirrorBroken2) {
    if (objMirrorBroken2.image_index == 3) {
    global.homeBrokenMirror = 1;
    }
}
if instance_exists(objPhotoUs) {
    if (objPhotoUs.image_index == 3) {
    global.homePhoto = 1;
    }
}
if instance_exists(objBadWall) {
    if (objBadWall.image_index == 3) || (objBadWall.image_index == 2) {
    global.homeBadwall2 = 1;
    }
}
if instance_exists((inst_CA1BD79E)) {
    if ((inst_CA1BD79E).image_index == 3) {
    global.homeTrigger1 = 1;
    }
}
if instance_exists((inst_E5D5871E)) {
    if ((inst_E5D5871E).image_index == 3) {
    global.homeTrigger2 = 1;
    }
}
if instance_exists((inst_9228D315)) {
    if ((inst_9228D315).image_index == 3) {
    global.homeTrigger3 = 1;
    }
}
/*if instance_exists((105507)) {
    if ((105507).image_index == 3) {
    global.homeTrigger4 = 1;
    }
}*/
if instance_exists((inst_CC452053)) {
    if ((inst_CC452053).image_index == 3) {
    global.homeTrigger5 = 1;
    }
}
if instance_exists((inst_DD128D52)) {
    if ((inst_DD128D52).image_index == 3) {
    global.homeTrigger6 = 1;
    }
}
if instance_exists(objWifesBody) {
    if (objWifesBody.image_index == 3) {
    global.homeWifesBody = 1;
    }
}
if instance_exists(objWifesBody) {
    if (objWifesBody.image_index == 5) {
    global.homeBody = 2;
    }
}
if instance_exists(objBathVanity) {
    if (objBathVanity.image_index == 3) {
    global.homeBathVanity = 1;
    }
}
if instance_exists(objBathTub) {
    if (objBathTub.image_index == 3) {
    global.homeBathTub = 1;
    }
}

// Alt Home Settings
if instance_exists(objBathVanityALT) {
    if (objBathVanityALT.image_index == 3) {
    global.altBathVanity = 1;
    }
}
if instance_exists(objBathTubALT) {
    if (objBathTubALT.image_index == 3) {
    global.altBathTub = 1;
    }
}
if instance_exists(objKitchenTableALT) {
    if (objKitchenTableALT.image_index == 3) {
    global.altKitchenTable = 1;
    }
}
if (global.altKnife == 1) {
    global.altBathTub = 0;
    if instance_exists(objBathTubALT) {
        objBathTubALT.image_index = 0;
        }
    }
if (global.altGun == 1) {
    global.altKitchenTable = 0;
    if instance_exists(objKitchenTableALT) {
        objKitchenTableALT.image_index = 0;
        }
    }
if instance_exists(objTVHomeALT) {
    if (objTVHomeALT.image_index == 3) {
    global.altTV = 1;
    }
}
if instance_exists(objMirrorBrokenALT) {
    if (objMirrorBrokenALT.image_index == 3) {
    global.altBrokenMirror = 1;
    }
}
if instance_exists(objBookshelvesALT) {
    if (objBookshelvesALT.image_index == 3) {
    global.altShelves = 1;
    }
}
if instance_exists(objMailALT) {
    if (objMailALT.image_index == 3) {
    global.altMail = 1;
    }
}
if instance_exists(objGunALT) {
    if (objGunALT.image_index == 3) {
    global.altGun = 1;
    }
}
if instance_exists(objKnifeALT) {
    if (objKnifeALT.image_index == 3) {
    global.altKnife = 1;
    }
}
if instance_exists(objReceiptALT) {
    if (objReceiptALT.image_index == 3) {
        global.altReceipt = 1;
    }
    if (objReceiptALT.image_index == 5) {
        global.altReceipt = 2;
        }
    }
if instance_exists(objTapeALT) {
    if (objTapeALT.image_index == 3) {
    global.altTape = 1;
    }
}
if instance_exists(objWalletALT) {
    if (objWalletALT.image_index == 3) {
        global.altWallet = 1;
        }
    if (objWalletALT.image_index == 5) {
        global.altWallet = 2;
        }
    }
if instance_exists(objKeycardALT) {
    if (objKeycardALT.image_index == 3) {
        global.altKeycard = 1;
        }
    if (objKeycardALT.image_index == 5) {
        global.altKeycard = 2;
        }
    }
if instance_exists(objLetterALT) {
    if (objLetterALT.image_index == 3) {
        global.altLetter = 1;
        }
    if (objLetterALT.image_index == 5) {
        global.altLetter = 2;
        }
    }
if instance_exists(objOMphotoALT) {
    if (objOMphotoALT.image_index == 3) {
        global.altOMPhoto = 1;
        }
    if (objOMphotoALT.image_index == 5) {
        global.altOMPhoto = 2;
        }
    }
if instance_exists(objHairpinALT) {
    if (objHairpinALT.image_index == 3) {
    global.altHairpin = 1;
    }
}
if instance_exists(objNotebookALT) {
    if (objNotebookALT.image_index == 3) {
    global.altNotebook = 1;
    }
if (objNotebookALT.image_index == 5) {
    global.altNotebook = 2;
    }
}
if instance_exists(objWifesSuitcaseALT) {
    if (objWifesSuitcaseALT.image_index == 3) {
    global.altSuitcase = 1;
    }
}
if instance_exists(objPhotoOfUsALT) {
    if (objPhotoOfUsALT.image_index == 3) {
    global.altPhotoOfUs = 1;
    }
}
if instance_exists(objDeskHomeALT) {
    if global.altSafeCheck == 0 {
        if (objDeskHomeALT.image_index == 3) {
            global.altDesk = 1;
            }
        }
    if global.altSafeCheck == 1 {
        if (objDeskHomeALT.image_index == 3) {
            global.altDesk = 1;
            global.altSafeCode = 1;
        }
    }
}
if instance_exists(objBadWallALT) {
    if (objBadWallALT.image_index == 3) {
    global.altBadwall = 1;
    }
}
if instance_exists(objSafe) {
    if global.altSafeCheck == 0 {
        if (objSafe.image_index == 3) {
        global.altSafeCheck = 1;
        }
    }
}
if instance_exists((inst_A37A1947)) {
    if ((inst_A37A1947).image_index == 3) {
    global.altTrigger1 = 1;
    }
}


// ALTS: How many items have you seen?
/*if ((global.altReceipt == 1) || (global.altReceipt == 2)) &amp;&amp; (global.altReceiptCheck == 0) {
    global.altHowmanyseen +=1;
    global.altReceiptCheck = 1;
    }*/ // &lt;-- not used
if ((global.altTape == 1) || (global.altTape == 2)) &amp;&amp; (global.altTapeCheck == 0) {
    global.altHowmanyseen +=1;
    global.altTapeCheck = 1;
    }
if ((global.altWallet == 1) || (global.altWallet == 2)) &amp;&amp; (global.altWalletCheck == 0) {
    global.altHowmanyseen +=1;
    global.altWalletCheck = 1;
    }
if ((global.altKeycard == 1) || (global.altKeycard == 2)) &amp;&amp; (global.altKeycardCheck == 0) {
    global.altHowmanyseen +=1; 
    global.altKeycardCheck = 1;
    }
if ((global.altLetter == 1) || (global.altLetter == 2)) &amp;&amp; (global.altLetterCheck == 0) {
    global.altHowmanyseen +=1;
    global.altLetterCheck = 1;
    }
if ((global.altOMPhoto == 1) || (global.altOMPhoto == 2)) &amp;&amp; (global.altOMPhotoCheck == 0) {
    global.altHowmanyseen +=1;
    global.altOMPhotoCheck = 1;
    }
/*if ((global.altHairpin == 1) || (global.altHairpin == 2)) &amp;&amp; (global.altHairpinCheck == 0) {
    global.altHowmanyseen +=1;
    global.altHairpinCheck = 1;
    }*/ // &lt;-- not used
if ((global.altNotebook == 1) || (global.altNotebook == 2)) &amp;&amp; (global.altNotebookCheck == 0) {
    global.altHowmanyseen +=1;
    global.altNotebookCheck = 1;
    }
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scale BGs, lots of stuff

// Scale backgrounds
if global.titleScreen = 0 {
    background_xscale[0] = 4;
    background_yscale[0] = 4;
    if background_exists(1) {
        background_xscale[1] = 4;
        background_yscale[1] = 4;
        }
    if background_exists(2) {
        background_xscale[2] = 4;
        background_yscale[2] = 4;
        }
    }
    
/// Test mode reset
/*if global.testMode == 1 {
    if room == tunnelTop01 {
        audio_stop_all();
        game_restart();
        }
    }*/
    
// Allow pausing at start of game
if room == houseStart {
    global.pauseReady = 1;
    }

// Add limp for tunnel, factory
if room == FallDown || room == FallDown2 {
    if global.playerLimp &lt; 2 {
        global.playerLimp += 1;
        }
    }
    
// Create pillarboxes for 16:9 displays to hide outside edges
if (global.width / global.height &gt; 1.5) {
    if !instance_exists(objFootstepKiller) {
        if global.titleScreen == 0 &amp;&amp; room != beginning1 &amp;&amp; room != storyWakeup &amp;&amp; room != storyTitleHome &amp;&amp; room != storyExit2 &amp;&amp; room != storyGun2 &amp;&amp; room != storyKnife2 &amp;&amp; room != storyEpLoad &amp;&amp; room != enterCode &amp;&amp; room != enterCodePC &amp;&amp; room != enterCodeCE {
            // 21:9
            if (global.width / global.height &gt;= 2) {
                if room_width &lt; 758 {
                    view_xview[1] =-44;
                    instance_create(room_width-room_width,0,objPillarboxLeft);
                    }
                }  
        
            // 16:9
            if room_width &lt; 568 {
                view_xview[1] =-44;
                instance_create(room_width-room_width,0,objPillarboxLeft);
                }
            }
        }
    }

// Hide Flashlight Pop-in
if (!instance_exists(objObscurer)) &amp;&amp; (global.playerStart == 1) &amp;&amp; !instance_exists(objFootstepKiller) {
    if global.deviceViewChange == 0 {
        instance_create(view_xview[0],view_yview[0],objObscurer);
        }
    if global.deviceViewChange == 1 {
        if (os_type == os_ps4 || os_type == os_psvita) {
            instance_create(view_xview[1],view_yview[1],objObscurer);
            }
        else {
            instance_create(view_xview[1],view_yview[1],objObscurer);
            }
        }   
    }

if (global.playerStart == 1) {
    if !instance_exists(objFootstepKiller) {
        if instance_exists(objPlayer) {
            objPlayer.visible = true;
            }
        }
    }
    
// Make sure to BRING THA NOIZE!
if room != logoTitle &amp;&amp; room != ps4Load {
    if (!instance_exists(objBringThaNoize)) {
        instance_create(0,0,objBringThaNoize);
        objBringThaNoize.depth = -15000;
        }
    }

if room == houseStart {
    // reset mbleftpressed at Game Start
    global.mbleftPressed = 0;
    }
    
if listenerCheck == 0 {
    if instance_exists(objPlayer) {
        var num = audio_get_listener_count();
        //var mask = 0;
        // Set gain for all listeners to 1
        for( var i = 0; i &lt; num; ++i;) {
           var info = audio_get_listener_info(i);
           var ind = info[? "index"];
           //var m = audio_listener_get_data(info[? "mask"]);
           //mask = mask | m;
           if audio_get_master_gain(ind) != 6 {
              audio_set_master_gain(info[? "index"], 6);
              }
           ds_map_destroy(info);
           }
        //audio_set_listener_mask(mask);
        listenerCheck = 1;
        }
    }
    
// Special Interactive Object Settings

// Tunnel Objects
if (global.tunnelTriggerSound1 == 1) &amp;&amp; (global.tunnelTrigger4 == 3) {
    global.tunnelTrigger4 = 0;
}
if (room == tunnelMid202) {
    if (global.tunnelBats == 1) {
        if audio_is_playing(sndBats) {
            audio_stop_sound(sndBats);
            }
        if instance_exists(objBats) {
            with(objBats) {
                instance_destroy();
                }
            }
        }
    }

// Sewers Objects
if (global.tapePlayed == 1) {
    if instance_exists(objDeskTV) {
    objDeskTV.sprite_index = sprDeskTVon;
    }
}
if global.valve1 == 1 {
    if instance_exists((inst_B2036B08)) {
    (inst_B2036B08).image_index = 1;
    }
}
if global.valve2 == 1 {
    if instance_exists((inst_8282A86D)) {
    (inst_8282A86D).image_index = 2;
    }
}
if global.valve3 == 1 {
    if instance_exists((inst_59A9F82A)) {
    (inst_59A9F82A).image_index = 3;
    }
}
if global.valve4 == 1 {
    if instance_exists((inst_F8EB1B35)) {
    (inst_F8EB1B35).image_index = 1;
    }
}
if (global.valve1 == 1) &amp;&amp; (global.valve2 == 1) &amp;&amp; (global.valve3 == 1) &amp;&amp; (global.valve4 == 1) {
    global.ladderDrained = 1;
    }
if (global.ladderDrained == 1) {
    if instance_exists(objLadderWater) {
        instance_create(objLadderWater.x,objLadderWater.y,objLadderDrained);
        with (objLadderWater) {
        instance_destroy();
        }
        with (inst_DA59EEE7) {
        instance_destroy();
        }
        with (inst_E6E04444) {
        instance_destroy();
        }
    }
}
if (global.sewerKiller == 1) &amp;&amp; (global.sewerSteam == 3) {
    global.sewerSteam = 0;
}

// Water Tower Settings
if global.wtLadder == 1 {
    if instance_exists(objLadderWT) {
    objLadderWT.image_index = 3;
    }
}

// Forest Settings
if (global.forestTable == 1) || (global.forestTableNo == 1) {
    if instance_exists(objForestTable) {
    objForestTable.image_index = 3;
    }
}

// Factory Settings
if global.factorySwitch1 == 1 {
    if instance_exists((inst_F5540572)) {
    (inst_F5540572).image_index = 8;
    }
}
if global.factorySwitch2 == 1 {
    if instance_exists((inst_144A380E)) {
    (inst_144A380E).image_index = 6;
    }
}
if global.factorySwitch3 == 1 {
    if instance_exists((inst_97034121)) {
    (inst_97034121).image_index = 7;
    }
}
if global.factorySwitch4 == 1 {
    if instance_exists((inst_4A58EF85)) {
    (inst_4A58EF85).image_index = 7;
    }
}
if global.factorySwitch5 == 1 {
    if instance_exists((inst_A47DFF43)) {
    (inst_A47DFF43).image_index = 8;
    }
}
if (global.factorySwitch1 == 1) &amp;&amp; (global.factorySwitch2 == 1) &amp;&amp; (global.factorySwitch3 == 1) &amp;&amp; (global.factorySwitch4 == 1) &amp;&amp; (global.factorySwitch5 == 1) {
    global.factoryPowerbox = 1;
    }
if global.factoryBoardedDoor == 0 {
    if instance_exists(objDoorFactoryBoarded) {
        objDoorFactoryBoarded.image_index = 3;
        }
    }

if (room == road01) || (room == road02) {
    if instance_exists(objFactorySound) {
        with objFactorySound {
            instance_destroy();
            }
        }
    }
    
// Home Settings
if global.homeBadwall2 == 1 {
    if instance_exists(objBadWall) {
    objBadWall.image_index = 3;
    }
}

// Alt Home Settings
if (global.altSafeCheck == 1) {
    if (global.altDesk == 1) {
        if instance_exists(objDeskHomeALT) {
            global.altDesk = 1;
            objDeskHomeALT.image_index = 0;
            }
        }
    }

if (global.altKnife == 1) {
    global.altBathTub = 0;
    if instance_exists(objBathTubALT) {
        objBathTubALT.image_index = 0;
        }
    }
if (global.altGun == 1) {
    global.altKitchenTable = 0;
    if instance_exists(objKitchenTableALT) {
        objKitchenTableALT.image_index = 0;
        }
    }
    
// Save Triggers
if instance_exists((106801)) {
    if global.saveLocation == 5 {
        with (106801) {
            instance_destroy();
            }
        }
    }
if instance_exists((106755)) {
    if global.saveLocation == 7 {
       /* with (106755) {
            instance_destroy();
            }*/
          
              
       /* This is valid in 1.4, but not in GMS 2.x, so making it safer code
       (106755).image_index = 2;
       */
       with (106755) { image_index = 2; }
       
    }
}
if instance_exists((106802)) {
    if global.saveLocation == 8 {
        with (106802) {
            instance_destroy();
            }
        }
    }
if instance_exists((106761)) {
    if global.saveLocation == 9 {
        with (106761) {
            instance_destroy();
            }
        }
    }
if instance_exists((106765)) {
    if global.saveLocation == 10 {
        with (106765) {
            instance_destroy();
            }
        }
    }
if instance_exists((106767)) {
    if global.saveLocation == 11 {
        with (106767) {
            instance_destroy();
            }
        }
    }
if instance_exists((106804)) {
    if global.saveLocation == 12 {
        with (106804) {
            instance_destroy();
            }
        }
    }
if instance_exists((106776)) {
    if global.saveLocation == 14 {
        with (106776) {
            instance_destroy();
            }
        }
    }

    

// Make Door Stoppers
if instance_exists(objDoorLeft) {
    instance_create(objDoorLeft.x,objDoorLeft.y,objBlock);
    }
if instance_exists(objDoorRight) {
    instance_create(objDoorRight.x+32,objDoorRight.y,objBlock);
    }
if instance_exists(objBadWall) {
    instance_create(objBadWall.x,objBadWall.y,objBlock);
    }
if instance_exists(objDoorLeftSewers) {
    instance_create(objDoorLeftSewers.x,objDoorLeftSewers.y,objBlock);
    }
if instance_exists(objDoorSewerEntrance) {
    instance_create(objDoorSewerEntrance.x,objDoorSewerEntrance.y,objBlock);
    }
if instance_exists(objDoorRightSewers) {
    instance_create(objDoorRightSewers.x+32,objDoorRightSewers.y,objBlock);
    }
if instance_exists(objHomeGateRightDummy) {
    instance_create(objHomeGateRightDummy.x+32,objHomeGateRightDummy.y,objBlock);
    }
if instance_exists(objDoorLeftFence) {
    instance_create(objDoorLeftFence.x,objDoorLeftFence.y,objBlock);
    }
if instance_exists(objDoorRightFence) {
    instance_create(objDoorRightFence.x+32,objDoorRightFence.y,objBlock);
    }
if instance_exists(objDoorLeftFactory) {
    instance_create(objDoorLeftFactory.x,objDoorLeftFactory.y,objBlock);
    }
if instance_exists(objDoorRightFactory) {
    instance_create(objDoorRightFactory.x+32,objDoorRightFactory.y,objBlock);
    }
if instance_exists(objDoorALTexit) {
    instance_create(objDoorALTexit.x,objDoorALTexit.y,objBlock);
    }
if instance_exists(doorExit2) {
    instance_create(doorExit2.x,doorExit2.y,objBlock);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Prevent icon draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set fullscreen mode with F4 (Windows/Mac)
if os_type == os_windows || os_type == os_macosx {
    if window_get_fullscreen() {
        window_set_fullscreen(false);
        window_set_size((display_get_width()*0.5),(display_get_height()*0.5));
        }
    else {
        window_set_fullscreen(true);
        }
        
    // resize stuff
    alarm[11] = 2;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
