<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCTRL2</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///  Change application surface and resize views

// Start Marking Title Screens
global.titleScreen = 0;

// PC &amp; Mac
if (os_type == os_windows || os_type == os_macosx) {
    ww = display_get_width();
    hh = display_get_height();
    // Determine menu screen res
    // SD
    if (hh &lt; 720) {
        global.deviceViewChange = 0;
        global.width = 480;
        global.height = 320;
        global.screenRes = 320;
        surface_resize(application_surface,global.width,global.height);
        window_set_size(global.width,global.height);
        }
    // 720p
    if (hh == 720) {
        global.deviceViewChange = 1;
        global.screenRes = 720;
        global.screenRatio = (round(ww/hh));
        global.device_w=display_get_width();
        global.device_h=display_get_height();
        global.height = display_get_height();
        global.width=round((global.device_w/global.device_h)*global.height);
        surface_resize(application_surface,1280,720);
        window_set_size(global.device_w,global.device_h);
        display_set_gui_size(global.width,global.height);
        }
    // Between 720 and 1080p
    if (hh &gt; 720) &amp;&amp; (hh &lt; 1080) {
        global.deviceViewChange = 1;
        global.screenRes = 720;
        global.screenRatio = (round(ww/hh));
        global.device_w=1280;
        global.device_h=720;
        global.width = 1280;
        global.height = 720;
        surface_resize(application_surface,1280,720);
        window_set_size(global.device_w,global.device_h);
        display_set_gui_size(global.width,global.height);
        }
    // 1080p
    if (hh &gt;= 1080) {
        global.screenRes = 1080;
        global.deviceViewChange = 1;
        global.screenRatio = (round(ww/hh));
        global.device_w=display_get_width();
        global.device_h=display_get_height();
        global.height = display_get_height();
        global.width=round((global.device_w/global.device_h)*global.height);
        // 21:9 support
        if global.width / global.height &lt; 2 {
            surface_resize(application_surface,1920,1080);
            }
        if global.width / global.height &gt;= 2 {
            surface_resize(application_surface,display_get_width(),1080);
            //surface_resize(application_surface,1920,1080);
            show_debug_message("21:9 is a go!");
            }
        window_set_size(global.device_w,global.device_h);
        display_set_gui_size(global.width,global.height);
        }
    // Resize rooms for HD
    if (global.screenRes == 720 || global.screenRes == 1080) {
        // Main Titles
        room_set_width(setView,global.device_w);
        room_set_height(setView,global.device_h);
        room_set_width(logoTitle,global.device_w);
        room_set_height(logoTitle,global.device_h);
        room_set_width(mainTitle,global.device_w);
        room_set_height(mainTitle,global.device_h);
        room_set_width(saveNotes,global.device_w);
        room_set_height(saveNotes,global.device_h);
        room_set_width(saveWarning,global.device_w);
        room_set_height(saveWarning,global.device_h);
        room_set_width(experience,global.device_w);
        room_set_height(experience,global.device_h);
        room_set_width(instructions,global.device_w);
        room_set_height(instructions,global.device_h);
        room_set_width(setView2,global.device_w);
        room_set_height(setView2,global.device_h);
        //
        room_set_view(setView, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(logoTitle, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(mainTitle, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveNotes, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveWarning, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(experience, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(instructions, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(setView2, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        }
    }

// PS4
if (os_type == os_ps4) {
        global.deviceViewChange = 1;
        global.device_w=display_get_width();
        global.device_h=display_get_height();
        global.width = 1920;
        global.height = 1080;
        // Main Titles
        room_set_width(setView,global.device_w);
        room_set_height(setView,global.device_h);
        room_set_width(logoTitle,global.device_w);
        room_set_height(logoTitle,global.device_h);
        room_set_width(ps4Load,global.device_w);
        room_set_height(ps4Load,global.device_h);
        room_set_width(saveNotes,global.device_w);
        room_set_height(saveNotes,global.device_h);
        room_set_width(saveWarning,global.device_w);
        room_set_height(saveWarning,global.device_h);
        room_set_width(experience,global.device_w);
        room_set_height(experience,global.device_h);
        room_set_width(instructions,global.device_w);
        room_set_height(instructions,global.device_h);
        room_set_width(setView2,global.device_w);
        room_set_height(setView2,global.device_h);
        //
        room_set_view(setView, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(logoTitle, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(ps4Load, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveNotes, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveWarning, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(experience, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(instructions, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(setView2, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
    }
    
// PS Vita
if (os_type == os_psvita) {
        global.deviceViewChange = 1;
        global.device_w=display_get_width();
        global.device_h=display_get_height();
        global.width = 960;
        global.height = 544;
        // Main Titles
        room_set_width(setView,global.device_w);
        room_set_height(setView,global.device_h);
        room_set_width(logoTitle,global.device_w);
        room_set_height(logoTitle,global.device_h);
        room_set_width(ps4Load,global.device_w);
        room_set_height(ps4Load,global.device_h);
        room_set_width(saveNotes,global.device_w);
        room_set_height(saveNotes,global.device_h);
        room_set_width(saveWarning,global.device_w);
        room_set_height(saveWarning,global.device_h);
        room_set_width(experience,global.device_w);
        room_set_height(experience,global.device_h);
        room_set_width(instructions,global.device_w);
        room_set_height(instructions,global.device_h);
        room_set_width(setView2,global.device_w);
        room_set_height(setView2,global.device_h);
        //
        room_set_view(setView, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(logoTitle, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(ps4Load, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveNotes, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveWarning, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(experience, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(instructions, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(setView2, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
    }

// Mobile    
if os_type == os_ios {
    if (os_device == device_ios_ipad_retina || os_device == device_ios_ipad) {
        global.deviceViewChange = 1;
        global.device_w=display_get_width();
        global.device_h=display_get_height();
    
        switch os_device {
            case device_ios_ipad_retina: global.height = 1536; break;
            case device_ios_ipad: global.height = 768; break;
            }
        global.width=round((global.device_w/global.device_h)*global.height);
        }
        if (os_device == device_ios_iphone5 || os_device == 6 /*iPhone 6 hack*/|| os_device == 6/*iPhone 6 hack*/ /* || os_device == device_ios_iphone6 || os_device == device_ios_iphone6plus*/) {
            global.deviceViewChange = 1;
            global.device_w=1136;
            global.device_h=640;
            global.width = 1136;
            global.height = 640;
            }
        if (os_device == device_ios_iphone_retina) {
            global.deviceViewChange = 1;
            global.device_w=960;
            global.device_h=640;
            global.width = 960;
            global.height = 640;
            }
        if (os_device == device_ios_iphone || os_device == device_ios_unknown) {
            global.deviceViewChange = 1;
            global.device_w=480;
            global.device_h=320;
            global.width = 480;
            global.height = 320;
            }
        // Reset first room
        room_set_width(setView,global.device_w);
        room_set_height(setView,global.device_h);
        room_set_width(varLoadMob,global.device_w);
        room_set_height(varLoadMob,global.device_h);
        // Main Titles
        room_set_view(setView, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveNotes, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(saveWarning, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(experience, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(instrMob1, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(instrMob2, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
        room_set_view(instrMob3, 1, 1, 0, 0, global.width, global.height, 0, 0, global.device_w, global.device_h, global.width/2, global.height/2, -1, -1, -1);
    }
    
alarm[0] = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_type == os_ios || os_type == os_android) {
    room_goto(varLoadMob);
    }
if (os_type == os_windows || os_type == os_macosx) {
    room_goto(logoTitle);
    }
if (os_type == os_ps4 || os_type == os_psvita) {
    room_goto(logoTitle);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with objPlayer {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initial surface resize per-platform

// Set SWF smoothing
draw_enable_swf_aa(true);
draw_set_swf_aa_level(1);

var ww, yy;
if (os_type == os_ios) {
    ww = display_get_width();
    hh = display_get_height();
    }
if (os_type == os_ps4) {
    ww = 1920;
    hh = 1080;
    }
if (os_type == os_psvita) {
    ww = 960;
    hh = 544;
    }

// Initial Application Surface size
if (os_type != os_windows &amp;&amp; os_type != os_macosx) {
    // Change interp. for logoTitle
    texture_set_interpolation(true);
    surface_resize(application_surface,ww,hh);
    }
    
// Kill all sounds (in case of restart)
audio_stop_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
