<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Set Sprites
    if animated == 0 {
        image_speed = 0;
    }
    if animated == 1 {
        image_speed = 0.33;
    }
// Set interaction variables
/*if globalSetting == 1 {
    sprite_index = swapTo;
    }*/
    
// Object variables (instance creation will override)
usable = 99;
useSound = 99;
yesno = 99;
whatToSayFirst = "99";
whatToSayNext = "99";
whatToSay = "99";
whatToSay2 = "99";
whatToSay3 = "99";
whatToSay4 = "99";
whatToSayNo = "99";
whatToSayYes = "99";
whatToSayAgain = "99";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check if Object Has Been Activated
    if sprite_index == swapTo {
        globalSetting = 1;
        }
    if sprite_index == swapFrom {
        globalSetting = 0;
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Highlight Object
// First highlight
if globalSetting == 0 {
    if (sprite_index == swapFrom) &amp;&amp; (place_meeting(x,y,objPlayer)) {
        sprite_index = highlight1;
        }
    if (sprite_index == highlight1) &amp;&amp; (!place_meeting(x,y,objPlayer)) {
        sprite_index = swapFrom;
        }
}
// Second highlight
if globalSetting == 1 {
    if (sprite_index == swapTo) &amp;&amp; (place_meeting(x,y,objPlayer)) {
        sprite_index = highlight2;
        }
    if (sprite_index == highlight2) &amp;&amp; (!place_meeting(x,y,objPlayer)) {
        sprite_index = swapTo;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player interaction
if global.textBoxOn == 0 {
    var push = 0;
    var mouseRight = 0;
    if (mouse_check_button_pressed(mb_right) &amp;&amp; position_meeting(mouse_x,mouse_y,self)) {
        mouseRight = 1;
        }
    if (mouse_check_button_pressed(mb_left) &amp;&amp; position_meeting(mouse_x,mouse_y,self)) {
        if global.doubleClick == 1 {
            mouseRight = 1;
            }
        }
    push = max(keyboard_check_pressed(global.xKey),gamepad_button_check_pressed(global.whichPad,global.xButton),mouseRight,0);
    // If Object Has Not Been Used
    if (usable == 1) &amp;&amp; push == 1 &amp;&amp; (place_meeting(x,y,objPlayer)) &amp;&amp; (globalSetting == 0) {
        // If Player doesn't have correct item
        if itemINeed == 0 {
            diag_show(0,whatToSay,id,ev_user0);
            }
        // If Player has correct item
        if itemINeed == 1 {
            diag_show(1,whatToSayWithItem,id,ev_user1);
            if (image_index == 3) {
                if useSound != sndNothing {
                    audio_play_sound(useSound,1,0);
                    }
                // Set Global Setting
                globalSetting = 1;
                // Swap sprite to new one
                sprite_index = swapTo;
                if animated == 1 {
                    image_speed = 0.33;
                    }
                else {
                    image_speed = 0;
                    }
                }
                diag_show(0,whatToSayYes,id,ev_user0);
                }
                if !(image_index == 3) {
                    diag_show(0,whatToSayNo,id,ev_user0);
                }
            }
    // If Object has been used
    if (usable == 1) &amp;&amp; push == 1 &amp;&amp; (place_meeting(x,y,objPlayer)) &amp;&amp; globalSetting == 1 {
        diag_show(0,whatToSayAgain,id,ev_user0);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
  if (diag_result == 1) {
    diag_show(0,whatToSayYes,-1,-1);
    sprite_index = swapTo;
    }
    if (diag_result == 0) {
    if whatToSayNo != "99" {
        diag_show(0,whatToSayNo,-1,-1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
  if (diag_result == 1)
    if (whatToSay2 != "99") {
        diag_show(0,whatToSay2,-1,-1);
        }
    if (whatToSay3 != "99") {
        diag_show(0,whatToSay2,-1,-1);
        }
    if (whatToSay4 != "99") {
        diag_show(0,whatToSay2,-1,-1);
        }
    // Change image_index to mark as activated
    sprite_index = swapTo;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
