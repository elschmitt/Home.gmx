<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGUIsave</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set if PS4 or PS Vita
if (os_type == os_ps4) || (os_type == os_psvita) {
    var myRoom;
    var checkMe = 0;
    
    /// State loading conditions
    global.loadid = -1;
    global.saveid = -1;
  
    // Initial player start
    global.whereToX = 256;
    global.whereToY = 288;
    global.playerStart = 0;
    
    // Touchscreen virtual keys
    global.shftKeyOn = 0;
    global.dialogOn = 0;
    
    // Initial Door Variables to avoid loading errors   
    global.whichLeft = houseTop02;
    global.whereLeftX = 256;
    global.whereLeftY = 288;
    //
    global.whichRight = houseStart;
    global.whereRightX = 96;
    global.whereRightY = 288;
    //
    global.whichUp = houseTop02;
    global.whereUpX = 256;
    global.whereUpY = 288;
    //
    global.whichDown = houseMid02;
    global.whereDownX = 256;
    global.whereDownY = 288;
    //
    global.whichIn = houseBath;
    global.whereInX = 256;
    global.whereInY = 288;
    //
    global.whichIn2 = houseBath;
    global.whereIn2X = 256;
    global.whereIn2Y = 288;
    //
    global.whichOut = houseKitchen;
    global.whereOutX = 256;
    global.whereOutY = 288;
    
    alarm[11] = 1;
    }
else {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug
show_debug_message("BR: gameSaved?: " + string(global.gameSaved));
//show_debug_message("BR: hT1?: " + string(global.houseTrigger1));
alarm[11] = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Override save for saveWarning &gt; Start Over
if global.nowLoading == 0 {
    //if !instance_exists(objFootstepKiller) {
        //if !instance_exists(objDontSave) {
        // Get current room name
        //myRoom = room_get_name(room);
        // Check position of Player and save it
            if room != houseStart {
                /*if instance_exists(objPlayer) {
                    global.playX = objPlayer.x;
                    global.playRoom = room;
                    }*/ 

                if global.nowSaving == 0 {
                
                    // Reset gameSaved
                    global.gameSaved = 0;
                
                    // New save system    
                    buffer_async_group_begin("homesave");
                      show_debug_message("BR: Beginning to save");
                    buffer_async_group_option("showdialog",0);
                      show_debug_message("BR: no showdialog");
                    buffer_async_group_option("savepadindex", global.whichPad); // New 2015-01-16
                        show_debug_message("BR: savepadindex to g.whichPad (NEW)");
                    buffer_async_group_option("slottitle","SaveForHome");
                    buffer_async_group_option("subtitle","Save file for Home");
                      show_debug_message("BR: write subtitle");
                    
                    global.savebuff = buffer_create(1,buffer_grow,1);
                      show_debug_message("BR: savebuff");
                    
                    ini_open_from_string("");
                       show_debug_message("BR: open from string");
                    inigame_save();
                       show_debug_message("BR: inigame_save");
                    
                    var inistring = ini_close();
                        show_debug_message("BR: ini_close");
                    buffer_write(global.savebuff,buffer_string,inistring);
                        show_debug_message("BR: buffer_write");
                    
                        // Saving is stopping here - why?
                    buffer_save_async(global.savebuff,"home_save01.sav",0,buffer_get_size(global.savebuff));
                       show_debug_message("BR: buffer_save_async");
                    
                    global.saveid = buffer_async_group_end();
                       show_debug_message("BR: buffer_async_ground_end");
                    
                    show_debug_message("BR: Saving with savid=" + string(global.saveid));
                    show_debug_message("Saving in room=" + string(room_get_name(room)));
                    
                    // Mark as saving
                    global.nowSaving = 1;
                       show_debug_message("BR: nowSaving = 1");
                
                }
                
                // Force-reset nowSaving after a time
                alarm[0] = 60 * 15;                
                }
           // }
        //}
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if previously finished game
if global.nowLoading == 2 {
    if (global.saveLocation == 17) {
        // Reset everything
        globalvars_reset();
        global.gameSaved = 0;
        show_debug_message(string("SL = 17, so reset, gameSaved = 0"));
        } 
    if instance_exists(objSaveCheck) {
        objSaveCheck.alarm[0] = 15;
        }
    global.nowLoading = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Special save for EndCredits     
if global.nowSaving == 0 {
    // New save system    
    buffer_async_group_begin("homesave");
    buffer_async_group_option("showdialog",0);
    buffer_async_group_option("slottitle","SaveForHome");
    buffer_async_group_option("subtitle","Save file for Home");
    
    global.savebuff = buffer_create(1,buffer_grow,1);
    
    // Mark as saving
    global.nowSaving = 1;
    
    ini_open_from_string("");
    inigame_save();
    
    var inistring = ini_close();
    buffer_write(global.savebuff,buffer_string,inistring);
    
    buffer_save_async(global.savebuff,"home_save01.sav",0,buffer_get_size(global.savebuff));
    
    global.saveid = buffer_async_group_end();
    
    show_debug_message("Saving with savid=" + string(global.saveid));
    show_debug_message("Saving in room=" + string(room_get_name(room)));

    }

// Force-reset nowSaving after a time
alarm[0] = 60*15;                
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check for save file at start
if global.nowLoading == 0 {
    // Mark as loading
    global.nowLoading = 1;
    show_debug_message("BR: nowLoading = 1...")
    
    global.loadbuff = buffer_create(1,buffer_grow,1);
    buffer_async_group_begin("homesave");
    buffer_async_group_option("showdialog",0);
    buffer_async_group_option("savepadindex", global.whichPad); // New 2015-01-16
    buffer_async_group_option("slottitle","SaveForHome");
    
    buffer_load_async(global.loadbuff,"home_save01.sav",0,-1);
    show_debug_message("BR: found home_save01.sav?");
    
    global.loadid = buffer_async_group_end();
    show_debug_message("loading with loadid=" + string(global.loadid));
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Deal with saving game per room
if global.nowLoading == 0 {
    if !instance_exists(objFootstepKiller) {
        if !instance_exists(objDontSave) {
        // Get current room name
        myRoom = room_get_name(room);
        // Check position of Player and save it
            if room != houseStart {
                if instance_exists(objPlayer) {
                    global.playX = objPlayer.x;
                    global.playRoom = room;
                    }    

                if global.nowSaving == 0 {
                
                    // Set gameSaved (only happens once)
                    global.gameSaved = 1;
                
                    // New save system    
                    buffer_async_group_begin("homesave");
                      show_debug_message("BR: Beginning to save");
                    buffer_async_group_option("showdialog",0);
                      show_debug_message("BR: no showdialog");
                    buffer_async_group_option("savepadindex", global.whichPad); // New 2015-01-16
                        show_debug_message("BR: savepadindex to g.whichPad (NEW)");
                    buffer_async_group_option("slottitle","SaveForHome");
                    buffer_async_group_option("subtitle","Save file for Home");
                      show_debug_message("BR: write subtitle");
                    
                    global.savebuff = buffer_create(1,buffer_grow,1);
                      show_debug_message("BR: savebuff");
                    
                    ini_open_from_string("");
                       show_debug_message("BR: open from string");
                    inigame_save();
                       show_debug_message("BR: inigame_save");
                    
                    var inistring = ini_close();
                        show_debug_message("BR: ini_close");
                    buffer_write(global.savebuff,buffer_string,inistring);
                        show_debug_message("BR: buffer_write");
                    
                        // Saving is stopping here - why?
                    buffer_save_async(global.savebuff,"home_save01.sav",0,buffer_get_size(global.savebuff));
                       show_debug_message("BR: buffer_save_async");
                    
                    global.saveid = buffer_async_group_end();
                       show_debug_message("BR: buffer_async_ground_end");
                    
                    show_debug_message("BR: Saving with savid=" + string(global.saveid));
                    show_debug_message("Saving in room=" + string(room_get_name(room)));
                    
                    // Mark as saving
                    global.nowSaving = 1;
                       show_debug_message("BR: nowSaving = 1");
                
                }
                
                // Force-reset nowSaving after a time
                alarm[0] = 60 * 15;                
                }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Force-reset nowSaving
if global.nowSaving == 1 {
    global.nowSaving = 0;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ident = ds_map_find_value(async_load, "id" );
var status = ds_map_find_value(async_load,"status");
var error = async_load[? "error"];


show_debug_message("async save\load event called with id="+string(ident) +" with status="+string(status) + " and error=" + string(error));

// Saving
if(ident == global.saveid) {
    if global.nowLoading == 0 {
        buffer_delete(global.savebuff);
        show_debug_message("BR: buffer_delete " + string(global.nowSaving));
        if global.nowSaving == 1 {
            show_debug_message("async event setting nowSaving to 0 global.gameSaved " + string(global.gameSaved));
            global.nowSaving = 0;
                
            show_debug_message(string("global.saveLocation: ")+string(global.saveLocation));
            show_debug_message("BR: End save " + string(global.gameSaved));
            show_debug_message("BR: houseTrigger1?: " + string(global.houseTrigger1));
            }
        }
    }

// Loading
else if(ident == global.loadid) {
    if global.nowSaving == 0 {
        if global.nowLoading == 1 {
            if (error &gt;= 0) {
                var buffstring = buffer_read(global.loadbuff,buffer_string);
                
                ini_open_from_string(buffstring);
                
                inigame_load();
                
                ini_close();
                
                buffer_delete(global.loadbuff);
                show_debug_message("read string from buffer " + buffstring);
                
                global.nowLoading = 2;
                if (status == true) {
                    alarm[4] = 15;
                    show_debug_message(string("Status is ")+string(status));
                    //show_debug_message("objPSSaver gonna check for save vars now...");
                    //global.gameSaved = 1;
                    }
                else {
                    show_debug_message(string("Status is ")+string(status));
                    }
                }
            }
        }
    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reset loading after startup check
if room == ps4Load {
    if global.nowLoading == 1 {
        global.nowLoading = 0;
        }
    global.dialogOn = 0;
    global.textBoxOn = 0;
    }
    
// Get ready to save after loading
if room == loadRoom {
    saveReady = 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load and save functions

// Get ready to save at start of gameplay
if room == houseTop02 {
    saveReady = 1;
    }

if saveReady == 1 {
    if room != endCredits {
        // Call regular Save function
        alarm[1] = 2;
        }
    if room == endCredits {
        // Call special Save function
        alarm[3] = 2;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Load vars (PS4/Vita), check for save

if (os_type == os_ps4) || (os_type == os_psvita) {
    // Load initial vars (works differently than AWY)
    globalvars_reset();
    scr_newVars();
    scr_typography();
    scr_options();
    // Always reset these variables
    // Cheat mode
    global.debugMode = 0;
    global.testMode = -1; // -1 = off, 0 = dev debug, 1 = beta test debug
    global.whichEnd = storyExit1;
    global.stickDownPressed = 0;
    global.stickRightPressed = 0;
    global.face1pressed = 0;
    global.triggerOn = 0;
    globalvar quitText;
    global.bgToDraw = 0;
    saveReady = 0;

    // PS4 lightbar colours
    global.cHouse = make_colour_rgb(158,154,127);
    alarm[2] = 2;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
