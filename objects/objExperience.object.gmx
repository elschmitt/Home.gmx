<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprExperience</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Lots of stuff

global.titleScreen = 1;

// Align BG
scr_bgCentre();

// Scale image...
if os_type == os_windows || os_type == os_macosx || os_type == os_ps4 {
    sprite_index = sprExpPS4;
    image_xscale = 2;
    image_yscale = image_xscale;
    }
if os_type == os_psvita || os_type == os_ios {
    image_xscale = 2;
    image_yscale = image_xscale;
    }
x = round(room_width/2);
y = round(room_height/3);

// Release click if user is holding on screen
if mouse_check_button_pressed(mb_left) {
    mouse_clear(mb_left);
    }
// Mark button / key as held
if gamepad_button_check(global.whichPad,global.xButton) || keyboard_check(global.xKey) {
    global.mbleftPressed = 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Start fadeout
if !instance_exists(objFadeOutNew) {
    instance_create(0,0,objFadeOutNew);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// reset mbleftpressed
global.mbleftPressed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Button releases

//if (os_type == os_windows || os_type == os_macosx) {
    if keyboard_check_released(global.xKey) {
        global.mbleftPressed = 0;
        }
    if global.forceInput &gt;= 1 {
        if gamepad_button_check_released(global.whichPad,global.xButton) {
            global.mbleftPressed = 0;
            }
        }
//    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Buttons, taps

pushContinue = max(keyboard_check_pressed(global.xKey),gamepad_button_check_pressed(global.whichPad,global.xButton),mouse_check_button_pressed(mb_left),0);

if global.mbleftPressed == 0 {
    if pushContinue == 1 {
        if os_type == os_ios {
            global.fadeTo = instrMob1;
            }
        else {
            global.fadeTo = setView2;
            }
        alarm[4] = 2;
        }
    }
if global.mbleftPressed == 1 {
    if keyboard_check_released(global.xKey) || gamepad_button_check_released(global.whichPad,global.xButton) || mouse_check_button_released(mb_left) {
        alarm[0] = 6;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw prompts, text

// Smooth fonts
texture_set_interpolation(true);

//// Text
draw_set_halign(fa_center);
draw_set_valign(fa_top);
// Turn off the lights, use headphones
draw_set_font(global.fntTitles);
var expText;
if os_type == os_ps4 || os_type == os_windows || os_type == os_macosx {
    expText = global.gui_exp1a;
    }
if os_type == os_psvita || os_type == os_ios {
    expText = global.gui_exp1;
    }
if global.width &gt; 960 {
    draw_text_ext_color(global.width*0.28,global.height*0.63,expText,pp1,global.width*0.32,global.wh,global.wh,global.wh,global.wh,1);
    draw_text_ext_color(global.width*0.72,global.height*0.63,global.gui_exp2,pp1,global.width*0.32,global.wh,global.wh,global.wh,global.wh,1);
    }
if global.width &lt;= 960 {
    draw_text_ext_color(global.width*0.3,global.height*0.63,expText,pp1,global.width*0.32,global.wh,global.wh,global.wh,global.wh,1);
    draw_text_ext_color(global.width*0.67,global.height*0.63,global.gui_exp2,pp1,global.width*0.32,global.wh,global.wh,global.wh,global.wh,1);
    }
//// Text Prompts
draw_set_font(global.fntPrompt);
if global.forceInput &gt;= 1 {
    draw_text_color((global.width / 2)+2,(global.height * 0.86)+2,global.gui_continuePCX,global.kk,global.kk,global.kk,global.kk,1); // Shadow
    draw_text_color((global.width / 2),(global.height * 0.86),global.gui_continuePCX,global.rd,global.rd,global.rd,global.rd,1); // Foreground text
    texture_set_interpolation(false);
    // A / X
    draw_sprite_ext(global.xSpr[global.ui],0,global.width*0.54,global.height*0.86,global.butScale,global.butScale,0,c_white,1);
    texture_set_interpolation(true);
    }
if global.forceInput &lt; 1 {
    draw_text_color((global.width / 2)+2,(global.height * 0.86)+2,global.gui_continuePC,global.kk,global.kk,global.kk,global.kk,1); // Shadow
    draw_text_color((global.width / 2),(global.height * 0.86),global.gui_continuePC,global.rd,global.rd,global.rd,global.rd,1); // Foreground text
    }
    
// Smooth fonts
texture_set_interpolation(false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw, alpha
draw_set_alpha(1);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>91,48</point>
    <point>91,91</point>
  </PhysicsShapePoints>
</object>
