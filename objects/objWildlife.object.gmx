<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Object (instance creation will override)
ambSound = sndNothing;
killMe = 99;
globalSetting = 99;
swapFrom = 99;
swapTo = 99;
useSound = sndNothing;
howClose = 99;
dontFlip = 99;

// Reset original idle animation
if globalSetting == 0 {
    sprite_index = swapFrom;
    }

// Reset ambient sound (if it exists) and zet it to zero
if ambSound != 99 {
    audio_play_sound(ambSound,8,1);
    audio_sound_gain(ambSound,0.5,0);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Stop ambient sound
if ambSound != sndNothing {
    audio_stop_sound(ambSound);
    }
// Play active sound
if useSound != sndNothing {
    audio_play_sound(useSound,1,0);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// If I haven't animated yet
    if sprite_index = swapFrom {
        if howClose != 99 {
            // If we want the player far away
            if howClose = 64 {
                if distance_to_object(objPlayer) &lt; 64 {
                    alarm[0] = 1;
                    sprite_index = swapTo;
                    }
                }
            // If we want the player at mid-distance
            if howClose = 48 {
                if distance_to_object(objPlayer) &lt; 48 {
                    alarm[0] = 1;
                    sprite_index = swapTo;
                    }
                }
            // If we want the player to be close
            if howClose = 16 {
                if distance_to_object(objPlayer) &lt; 16 {
                    alarm[0] = 1;
                    sprite_index = swapTo;
                    }
                }
            }
            
        }
// Ambient sound
if ambSound != 99 {
    // When player approaches
    if distance_to_object(objPlayer) &lt; 320 {
        audio_sound_gain(ambSound,0.7,0);
        }
    // When player is closer
    if distance_to_object(objPlayer) &lt; 160 {
        audio_sound_gain(ambSound,0.85,0);
        }
    // When player is really close
    if distance_to_object(objPlayer) &lt; 64 {
        audio_sound_gain(ambSound,1.0,0);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>globalSetting = 1;
// if I'm animating and I should disappear, kill me
if killMe != 99 {
    if killMe = 1 {
        if sprite_index = swapTo {
            sprite_index = sprNothing;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Ambient sound stop
if ambSound != 99 {
    if audio_exists(ambSound) {
        audio_stop_sound(ambSound);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Flip sprites if necessary
if dontFlip != 1 {
    if (objPlayer.x &lt; self.x) {
        image_xscale = -1;
    }
    if (objPlayer.x &gt; self.x) {
        image_xscale = 1;
    }
}
// Destroy if a one-time event
if globalSetting == 1 {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
