<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprAltSafe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set Sprites
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check if Object Has Been Activated and Write Global Variable
if image_index == 3 || image_index == 2 {
    if usable == 0 {
        global.altSafeCheck = 1;
        }
    if usable == 1 {
        global.altSafeCode = 1;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Highlight Object
if (image_index == 0) &amp;&amp; (place_meeting(x,y,objPlayer)) {
    image_index = 1;
    } 
if (image_index == 1) &amp;&amp; (!place_meeting(x,y,objPlayer)) {
    image_index = 0;
    }
// Highlight Object if Used 
if (image_index == 3) &amp;&amp; (place_meeting(x,y,objPlayer)) {
    image_index = 2;
    }
if (image_index == 2) &amp;&amp; (!place_meeting(x,y,objPlayer)) {
    image_index = 3;
    }
// Highlight Object if Used and No (special) 
if (image_index == 5) &amp;&amp; (place_meeting(x,y,objPlayer)) {
    image_index = 4;
    }
if (image_index == 4) &amp;&amp; (!place_meeting(x,y,objPlayer)) {
    image_index = 5;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Interaction
if global.textBoxOn == 0 {
    var push = 0;
    var mouseRight = 0;
    if (mouse_check_button_pressed(mb_right) &amp;&amp; position_meeting(mouse_x,mouse_y,self)) {
        mouseRight = 1;
        }
    if (mouse_check_button_pressed(mb_left) &amp;&amp; position_meeting(mouse_x,mouse_y,self)) {
        if global.doubleClick == 1 {
            mouseRight = 1;
            }
        }
    push = max(keyboard_check_pressed(global.xKey),gamepad_button_check_pressed(global.whichPad,global.xButton),mouseRight,0);
    // Examine Unusable Object
    // Hack for returning from safe
    if instance_exists(objFlashlight) {
        if objFlashlight.sprite_index == sprFlashlightIdle {
        if push == 1 &amp;&amp; place_meeting(x,y,objPlayer) {
            if usable == 0 {
                if image_index == 1 { // First time
                    diag_show(0,whatToSay,id,ev_user0);
                    }
                if image_index &gt; 1 { // Second time
                    diag_show(0,whatToSayAgain,id,ev_user2);
                    }
                }
            if usable == 1 {
                if image_index == 1 { // First time after getting code
                    if os_type == os_windows || os_type == os_macosx || os_type == os_ps4 || os_type == os_psvita || os_type == os_ios {
                        if globalSetting == 0 &amp;&amp; global.altSafeOpened == 0 {
                            global.bgToDraw = 0;
                            diag_show(1,whatToSay,id,ev_user1);
                            }
                        if globalSetting == 0 &amp;&amp; global.altSafeOpened == 1 {
                            room_goto(safeLetter);
                            }
                        }
                    if os_type == os_ios {
                        if globalSetting == 0 {
                            diag_show(1,whatToSay,id,ev_user1);
                            }
                        }
                    }
                if image_index &gt; 1 { // Second time
                    diag_show(0,whatToSayAgain,id,ev_user2);
                    }
                }
            }
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Yes - go to safeLetter / No
{
if (diag_result == 1) {
    room_goto(safeLetter);
    }
if (diag_result == 0) {
    diag_show(0,whatToSayNo,-1,-1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Nothing.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Yes - go to entercode / No
{
if (diag_result == 1) {
    if (os_type == os_ios || os_android) {
        global.altSafe = 1;
        audio_play_sound(sndSafeYes,1,0);
        }
    if (os_type == os_windows || os_type == os_macosx) {
        global.altSafe = 1;
        room_goto(enterCodePC);
        }
    if (os_type == os_ios || os_type == os_android || os_type == os_ps4 || os_type == os_psvita) {
        global.altSafe = 1;
        room_goto(enterCode);
        }
    }
if (diag_result == 0) {
    global.altSafe = 0;
    diag_show(0,whatToSayNo,-1,-1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// whatToSay2, then user2
{
    global.altSafeCheck = 1;
    image_index = 2;
    diag_show(0,whatToSay2,id,ev_user2);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set my state based on globalSetting
if global.altSafeCheck == 1 {
    if usable == 0 {
        image_index = 3;
        }
    }
if os_type == os_ps4 || os_type == os_psvita || os_type == os_ios {
    if global.altSafe == 1 {
        image_index = 3;
        }
    }
if os_type == os_windows || os_type == os_macosx {
    if global.altSafePC == 1 {
        image_index = 3;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
