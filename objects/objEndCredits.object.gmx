<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGUITitle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>500</depth>
  <persistent>0</persistent>
  <parentName>objFootstepKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Lots of stuff

global.titleScreen = 1;
if (os_type == os_windows || os_type == os_macosx || os_type == os_ios) {
    global.fadeTo = afterEnd2;
    }
if (os_type == os_ps4 || os_type == os_psvita) {
    global.fadeTo = afterEndPS;
    }

fadeIt = 0;

if os_type == os_ios {
    var scr = 0;
    if display_get_width() &gt;= 1900 {
        ll = 56;
        pb = 56;
        }
    if display_get_width() &lt; 1900 {
        ll = 29;
        pb = 29;
        }
    }

if (os_type == os_windows || os_type == os_macosx) {
    if (global.screenRes == 320) {
        ll = 16;
        pb = 16;
        }
    if (global.screenRes == 720) {
        // Full screen
        if window_get_fullscreen() {
            ll = 32;
            pb = 32;
           }
        // Windowed adjustment
        else {
            hh = display_get_height();
                if (hh &gt;= 1080) {
                    ll = 56;
                    pb = 56;
                    }
                else {
                    ll = 32;
                    pb = 32;
                    }
                }
        }
    if (global.screenRes == 1080) {
        ll = 56;
        pb = 56;
        }
    }
if (os_type == os_ps4) {
    ll = 56;
    pb = 56;
    }
if (os_type == os_psvita) {
    ll = 29;
    pb = 29;
    }
goNow = 0;
alarm[2] = 2;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// go now
goNow = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create fade
if fadeIt == 1 {
    instance_create(0,0,objFadeOutNew);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Scroll credits
var vv;
var vs;
// Decide view
switch os_type {
    case os_windows: {
        if goNow == 1 {
            if (global.screenRes == 320) {
                if ll &gt; -1460 {
                    ll-=5;
                    }
                // Stop scrolling
                if ll &lt;= -1460 {
                    goNow = 2;
                    }
                }
            if (global.screenRes == 720) {
                draw_set_font(font_credits2);
                cr8y = ll+(pb*112);
                // Full screen
                if window_get_fullscreen() {
                    if ll &gt; -3450 {
                        ll-=5;
                        }
                    // Stop scrolling
                    if ll &lt;= -3450 {
                        goNow = 2;
                        }
                    }
                // Windowed adjustment
                else {
                    hh = display_get_height();
                        if (hh &gt;= 1080) {
                            if ll &gt; -5795 {
                                ll-=5;
                                }
                            // Stop scrolling
                            if ll &lt;= -5795 {
                                goNow = 2;
                                }
                            }
                        else {
                            if ll &gt; -3450 {
                                ll-=5;
                                }
                            // Stop scrolling
                            if ll &lt;= -3450 {
                                goNow = 2;
                                }
                            }
                        }
                    }   
            if (global.screenRes == 1080) {
                if global.width / global.height &lt; 2 {
                    if ll &gt; -5795 {
                        ll-=5;
                        }
                    // Stop scrolling
                    if ll &lt;= -5795 {
                        goNow = 2;
                        }
                    }
                if global.width / global.height &gt;= 2 {
                    if ll &gt; -6050 {
                        ll-=5;
                        }
                    // Stop scrolling
                    if ll &lt;= -6050 {
                        goNow = 2;
                        }
                    }
                }
            }
        }; break;
    case os_macosx: {
        if goNow == 1 {
            if (global.screenRes == 320) {
                if ll &gt; -1460 {
                    ll-=5;
                    }
                // Stop scrolling
                if ll &lt;= -1460 {
                    goNow = 2;
                    }
                }
            if (global.screenRes == 720) {
                draw_set_font(font_credits2);
                cr8y = ll+(pb*112);
                // Full screen
                if window_get_fullscreen() {
                    if ll &gt; -3450 {
                        ll-=5;
                        }
                    // Stop scrolling
                    if ll &lt;= -3450 {
                        goNow = 2;
                        }
                    }
                // Windowed adjustment
                else {
                    hh = display_get_height();
                        if (hh &gt;= 1080) {
                            if ll &gt; -5795 {
                                ll-=5;
                                }
                            // Stop scrolling
                            if ll &lt;= -5795 {
                                goNow = 2;
                                }
                            }
                        else {
                            if ll &gt; -3450 {
                                ll-=5;
                                }
                            // Stop scrolling
                            if ll &lt;= -3450 {
                                goNow = 2;
                                }
                            }
                        }
                    }   
            if (global.screenRes == 1080) {
                if ll &gt; -5795 {
                    ll-=5;
                    }
                // Stop scrolling
                if ll &lt;= -5795 {
                    goNow = 2;
                    }
                }
            }
        } break;
    case os_ios: {
        if goNow == 1 {

            if display_get_width() &gt;= 1900 {
                scr = ll+(pb*130);
                if scr &gt; round(display_get_height()/2)-pb {
                    ll-=10; // higher for higher-res displays
                    }
                // Stop scrolling
                if scr &lt;= round(display_get_height()/2)-pb {
                    goNow = 2;
                    }
                }
            if display_get_width() &lt; 1900 {
                scr = ll+(pb*125);
                if scr &gt; round(display_get_height()/2)-pb {
                    ll-=5;
                    }
                // Stop scrolling
                if scr &lt;= round(display_get_height()/2)-pb {
                    goNow = 2;
                    }
                }
            }
        }; break;
    case os_ps4: {
        if global.debugMode == 0 {
            if goNow == 1 {
                if ll &gt; -6035 {
                    ll-=5;
                    }
                // Stop scrolling
                if ll &lt;= -6035 {
                    goNow = 2;
                    }
                }
            }
        if global.debugMode == 1 {
            if goNow == 1 {
                if ll &gt; -6035 {
                    ll-=5;
                    }
                // Stop scrolling
                if ll &lt;= -6035 {
                    goNow = 2;
                    }
                }
            }
        }; break;
    case os_psvita: {
        if global.debugMode == 0 {
            if goNow == 1 {
                if ll &gt; -3025 {
                    ll-=5;
                    }
                // Stop scrolling
                if ll &lt;= -3025 {
                    goNow = 2;
                    }
                }
            }
        if global.debugMode == 1 {
            if goNow == 1 {
                if ll &gt; -3025 {
                    ll-=5;
                    }
                // Stop scrolling
                if ll &lt;= -3025 {
                    goNow = 2;
                    }
                }
            }
        }; break;
    }
    
// Transition
if goNow == 2 {
    goNow = 3;
    fadeIt = 1;
    alarm[1] = 45;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Nothing for now.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Credits

// Set leading for mobile

if goNow &gt; 0 {
    // Typography and colours
    var g1, g2, rd, wh, kk, pp1, pp2, pp3, pp4;
    g1 = global.fcGreyLight;
    g2 = global.fcGreyDark;
    rd = global.fcRed;
    wh = c_white;
    kk = c_black;
    pp1 = pb;
    pp2 = (pb*2);
    pp3 = (pb*3);
    pp4 = (pb*4);
    
    // Credit placement
    var cr1y,cr2y,cr3y,cr4y,cr5y,cr6y,cr7y,cr8y;
    cr1y = ll+(pb*4);
    cr2y = ll+(pb*8);
    cr3y = ll+(pb*12);
    cr4y = ll+(pb*20);
    if (os_type == os_windows || os_type == os_macosx) {
        cr5y = ll+(pb*68);
        }
    else {
        cr5y = ll+(pb*70);
        }
    cr6y = ll+(pb*76);
    if (os_type == os_windows || os_type == os_macosx) {
        cr7y = ll+(pb*95);
        }
    else {
        cr7y = ll+(pb*98);
        }
    if os_type == os_ios {
    if display_get_width() &gt;= 1900 {
        cr8y = ll+(pb*130);
        }
    if display_get_width() &lt; 1900 {
        cr8y = ll+(pb*125);
        }
    }
    
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    
    //draw_text(500,32,ll); // Debug
    
    // PC and Mac
    if (os_type == os_windows || os_type == os_macosx) {
        // credits
        // Resolution-based font
        
        if (global.screenRes == 320) {
            draw_set_font(font_credits1);
            cr8y = ll+(pb*112);
            }
        if (global.screenRes == 720) {
            draw_set_font(font_credits2);
            cr8y = ll+(pb*112);
            // Full screen
            if window_get_fullscreen() {
                draw_set_font(font_credits2);
                cr8y = ll+(pb*112);
                }
            // Windowed adjustment
            else {
                hh = display_get_height();
                    if (hh &gt;= 1080) {
                        draw_set_font(font_credits3);
                        cr8y = ll+(pb*116);
                        }
                    else {
                        draw_set_font(font_credits2);
                        cr8y = ll+(pb*112);
                        }
                    }
                }   
        if (global.screenRes == 1080) {
            draw_set_font(font_credits3);
            cr8y = ll+(pb*116);
            }
            cr8y = ll+(pb*116);
        credit1_ttl = draw_text_ext_color(global.width/2,cr1y,global.crd1_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit2_ttl = draw_text_ext_color(global.width/2,cr2y,global.crd2_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit3_ttl = draw_text_ext_color(global.width/2,cr3y,global.crd3_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit4_ttl = draw_text_ext_color(global.width/2,cr4y,global.crd4_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit5_ttl = draw_text_ext_color(global.width/2,cr5y,global.crd5_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit6_ttl = draw_text_ext_color(global.width/2,cr6y,global.crd6_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit7_ttl = draw_text_ext_color(global.width/2,cr7y,global.crd7_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        
        // titles
        // Resolution-based font
        
        if (global.screenRes == 320) {
            draw_set_font(font_titles);
            }
        if (global.screenRes == 720) {
            // Full screen
            if window_get_fullscreen() {
                draw_set_font(font_titles2);
                }
            // Windowed adjustment
            else {
                hh = display_get_height();
                    if (hh &gt;= 1080) {
                        draw_set_font(font_titles3);
                        }
                    else {
                        draw_set_font(font_titles2);
                        }
                    }
            }
        if (global.screenRes == 1080) {
            draw_set_font(font_titles3);
            }
        credit1_txt = draw_text_ext_color(global.width/2,cr1y+pp2,global.crd1_txt,pb,global.width*0.73,g1,g1,g1,g1,1);   
        credit2_txt = draw_text_ext_color(global.width/2,cr2y+pp1,global.crd2_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit3_txt = draw_text_ext_color(global.width/2,cr3y+pp2,global.crd3_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit4_txt1 = draw_text_ext_color(global.width*0.3,cr4y+pp4,global.crd4_txt1,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit4_txt2 = draw_text_ext_color(global.width*0.7,cr4y+pp4,global.crd4_txt2,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit5_txt = draw_text_ext_color(global.width/2,cr5y+pp1,global.crd5_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit6_txt1 = draw_text_ext_color(global.width*0.3,cr6y+pp3,global.crd6_txt1,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit6_txt2 = draw_text_ext_color(global.width*0.7,cr6y+pp3,global.crd6_txt2,pb,global.width*0.35,g1,g1,g1,g1,1);
        
        /// The End
        // Resolution-based font
        
        if (global.screenRes == 320) {
            draw_set_font(font_end1);
            }
        if (global.screenRes == 720) {
            // Full screen
            if window_get_fullscreen() {
                draw_set_font(font_end2);
                }
            // Windowed adjustment
            else {
                hh = display_get_height();
                    if (hh &gt;= 1080) {
                        draw_set_font(font_end3);
                        }
                    else {
                        draw_set_font(font_end2);
                        }
                    }
            }
        if (global.screenRes == 1080) {
            draw_set_font(font_end3);
            }
        draw_set_font(font_end3);
        credit8_txt = draw_text_ext_color(global.width/2,cr8y,global.crd8_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        }
        
    // PS4
    if (os_type == os_ps4) {
        cr8y = ll+(pb*116);
        // credits
        draw_set_font(font_credits3);
        credit1_ttl = draw_text_ext_color(global.width/2,cr1y,global.crd1_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit2_ttl = draw_text_ext_color(global.width/2,cr2y,global.crd2_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit3_ttl = draw_text_ext_color(global.width/2,cr3y,global.crd3_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit4_ttl = draw_text_ext_color(global.width/2,cr4y,global.crd4_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit5_ttl = draw_text_ext_color(global.width/2,cr5y,global.crd5_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit6_ttl = draw_text_ext_color(global.width/2,cr6y,global.crd6_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit7_ttl = draw_text_ext_color(global.width/2,cr7y,global.crd7_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        
        // titles
        draw_set_font(font_titles3);
        credit1_txt = draw_text_ext_color(global.width/2,cr1y+pp2,global.crd1_txt,pb,global.width*0.73,g1,g1,g1,g1,1);   
        credit2_txt = draw_text_ext_color(global.width/2,cr2y+pp1,global.crd2_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit3_txt = draw_text_ext_color(global.width/2,cr3y+pp2,global.crd3_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit4_txt1 = draw_text_ext_color(global.width*0.3,cr4y+pp4,global.crd4_txt1,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit4_txt2 = draw_text_ext_color(global.width*0.7,cr4y+pp4,global.crd4_txt2,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit5_txt = draw_text_ext_color(global.width/2,cr5y+pp1,global.crd5_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit6_txt1 = draw_text_ext_color(global.width*0.3,cr6y+pp3,global.crd6_txt1,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit6_txt2 = draw_text_ext_color(global.width*0.7,cr6y+pp3,global.crd6_txt2,pb,global.width*0.35,g1,g1,g1,g1,1);
        
        /// The End
        draw_set_font(font_end3);
        credit8_txt = draw_text_ext_color(global.width/2,cr8y,global.crd8_ttl,pb,global.width*0.6,wh,wh,wh,wh,1);
        }
    // PS Vita 
    if (os_type == os_psvita) {
        cr8y = ll+(pb*112);
        // credits
        draw_set_font(font_credits2);
        credit1_ttl = draw_text_ext_color(global.width/2,cr1y,global.crd1_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit2_ttl = draw_text_ext_color(global.width/2,cr2y,global.crd2_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit3_ttl = draw_text_ext_color(global.width/2,cr3y,global.crd3_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit4_ttl = draw_text_ext_color(global.width/2,cr4y,global.crd4_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit5_ttl = draw_text_ext_color(global.width/2,cr5y,global.crd5_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit6_ttl = draw_text_ext_color(global.width/2,cr6y,global.crd6_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit7_ttl = draw_text_ext_color(global.width/2,cr7y,global.crd7_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        
        // titles
        draw_set_font(font_titles2);
        credit1_txt = draw_text_ext_color(global.width/2,cr1y+pp2,global.crd1_txt,pb,global.width*0.73,g1,g1,g1,g1,1);   
        credit2_txt = draw_text_ext_color(global.width/2,cr2y+pp1,global.crd2_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit3_txt = draw_text_ext_color(global.width/2,cr3y+pp2,global.crd3_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit4_txt1 = draw_text_ext_color(global.width*0.3,cr4y+pp4,global.crd4_txt1,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit4_txt2 = draw_text_ext_color(global.width*0.7,cr4y+pp4,global.crd4_txt2,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit5_txt = draw_text_ext_color(global.width/2,cr5y+pp1,global.crd5_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit6_txt1 = draw_text_ext_color(global.width*0.3,cr6y+pp3,global.crd6_txt1,pb,global.width*0.35,g1,g1,g1,g1,1);
        credit6_txt2 = draw_text_ext_color(global.width*0.7,cr6y+pp3,global.crd6_txt2,pb,global.width*0.35,g1,g1,g1,g1,1);
        
        /// The End
        draw_set_font(font_end2);
        credit8_txt = draw_text_ext_color(global.width/2,cr8y,global.crd8_ttl,pb,global.width*0.6,wh,wh,wh,wh,1);
        } 
    
    // iOS    
    if (os_type == os_ios || os_type == os_android) {
        // credits
        if display_get_width() &gt;= 1900 {
            draw_set_font(font_credits3);
            }
        if display_get_width() &lt; 1900 {
            draw_set_font(font_credits2);
            }
        credit1_ttl = draw_text_ext_color(global.width/2,cr1y,global.crd1_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit2_ttl = draw_text_ext_color(global.width/2,cr2y,global.crd2_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit3_ttl = draw_text_ext_color(global.width/2,cr3y,global.crd3_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit4_ttl = draw_text_ext_color(global.width/2,cr4y,global.crd4_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit5_ttl = draw_text_ext_color(global.width/2,cr5y,global.crd5_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit6_ttl = draw_text_ext_color(global.width/2,cr6y,global.crd6_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        credit7_ttl = draw_text_ext_color(global.width/2,cr7y,global.crd7_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        
        // titles
        if display_get_width() &gt;= 1900 {
            draw_set_font(font_titles3);
            }
        if display_get_width() &lt; 1900 {
            draw_set_font(font_titles2);
            }
        credit1_txt = draw_text_ext_color(global.width/2,cr1y+pp2,global.crd1_txt,pb,global.width*0.73,g1,g1,g1,g1,1);   
        credit2_txt = draw_text_ext_color(global.width/2,cr2y+pp1,global.crd2_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit3_txt = draw_text_ext_color(global.width/2,cr3y+pp2,global.crd3_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit4_txt1 = draw_text_ext_color(global.width*0.3,cr4y+pp4,global.crd4_txt1,pb,global.width*0.37,g1,g1,g1,g1,1);
        credit4_txt2 = draw_text_ext_color(global.width*0.7,cr4y+pp4,global.crd4_txt2,pb,global.width*0.37,g1,g1,g1,g1,1);
        credit5_txt = draw_text_ext_color(global.width/2,cr5y+pp1,global.crd5_txt,pb,global.width*0.73,g1,g1,g1,g1,1);
        credit6_txt1 = draw_text_ext_color(global.width*0.3,cr6y+pp3,global.crd6_txt1,pb,global.width*0.37,g1,g1,g1,g1,1);
        credit6_txt2 = draw_text_ext_color(global.width*0.7,cr6y+pp3,global.crd6_txt2,pb,global.width*0.37,g1,g1,g1,g1,1);
        
        /// The End
        if display_get_width() &gt;= 1900 {
            draw_set_font(font_end3);
            }
        if display_get_width() &lt; 1900 {
            draw_set_font(font_end2);
            }
        credit8_txt = draw_text_ext_color(global.width/2,cr8y,global.crd8_ttl,pb,global.width*0.73,wh,wh,wh,wh,1);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remove redundant draw
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
