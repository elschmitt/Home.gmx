<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDoorLeftFactory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objDoorPar2</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Door specific vars
useSound = sndDoorFactory;
useSoundLock = sndDoorLocked1;
useSoundUn = sndDoorFactoryUnlock;
goToAnim = DoorLeftFactory;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// After yes text
if (room == factoryMid02) {
    audio_play_sound(sndDoorFactoryUnlock,1,0);
    }
else {
    audio_play_sound(sndDoorFactory,1,0);
    }
room_goto(DoorLeftFactory);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// When asked to go through the door or not
{
    // Yes
    if (diag_result == 1) {
        diag_show(0,whatToSayYes,id,ev_user2);
        }
    // No
    if (diag_result == 0) {
        diag_show(0,whatToSayNo,-1,-1);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Say after WhatToSayFirst (if appropriate)
if confirmMe != 99 {
    //if image_index == 1 {
        // Hack to allow for text after unlocking
        if (room == factoryMid02) {
            if global.factoryCardKey == 1 {
                diag_show(1,whatToSayAgain,id,ev_user1);
                }
            }
        /*if (room == factoryBtmIn2) {
            if global.factoryPowerbox == 1 {
                diag_show(1,whatToSayAgain,id,ev_user1);
                }
            }*/
       // }
    }

if confirmMe == 99 {
    if instance_exists(objFlashlight) {
        objFlashlight.sprite_index = sprFlashlightClose;
        objFlashlight.image_index = 0;
        objFlashlight.image_speed = 0.33;
        }
    if (room == factoryMid02) {
        audio_play_sound(sndDoorFactoryUnlock,1,0);
        }
    else audio_play_sound(sndDoorFactory,1,0);
    room_goto(DoorLeftFactory);
    other.visible = false;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
